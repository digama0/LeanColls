{"name":"Aesop.Search.Expansion.Simp","instances":[],"imports":["Init","Lean.Elab.Tactic.Simp","Aesop.Options","Aesop.Script","Aesop.RuleSet"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/c51fa8ea4de8b203f64929cba19d139e555f9f6b/Aesop/Search/Expansion/Simp.lean#L83-L93","name":"Aesop.simpAll","line":83,"kind":"def","docLink":"./Aesop/Search/Expansion/Simp.html#Aesop.simpAll","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion/Simp.html#Aesop.simpAll\"><span class=\"name\">Aesop</span>.<span class=\"name\">simpAll</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Context\">Lean.Meta.Simp.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(simprocs : <a href=\"./Lean/Meta/Tactic/Simp/Simproc.html#Lean.Meta.Simp.SimprocsArray\">Lean.Meta.Simp.SimprocsArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(usedSimps : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.UsedSimps\">Lean.Meta.Simp.UsedSimps</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Aesop/Search/Expansion/Simp.html#Aesop.SimpResult\">Aesop.SimpResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/c51fa8ea4de8b203f64929cba19d139e555f9f6b/Aesop/Search/Expansion/Simp.lean#L69-L81","name":"Aesop.simpGoalWithAllHypotheses","line":69,"kind":"def","docLink":"./Aesop/Search/Expansion/Simp.html#Aesop.simpGoalWithAllHypotheses","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion/Simp.html#Aesop.simpGoalWithAllHypotheses\"><span class=\"name\">Aesop</span>.<span class=\"name\">simpGoalWithAllHypotheses</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Context\">Lean.Meta.Simp.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(simprocs : <a href=\"./Lean/Meta/Tactic/Simp/Simproc.html#Lean.Meta.Simp.SimprocsArray\">Lean.Meta.Simp.SimprocsArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(discharge? : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Simp/Rewrite.html#Lean.Meta.Simp.Discharge\">Lean.Meta.Simp.Discharge</a></span>)</span> <span class=\"fn\">none</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(simplifyTarget : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(usedSimps : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.UsedSimps\">Lean.Meta.Simp.UsedSimps</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Aesop/Search/Expansion/Simp.html#Aesop.SimpResult\">Aesop.SimpResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/c51fa8ea4de8b203f64929cba19d139e555f9f6b/Aesop/Search/Expansion/Simp.lean#L52-L67","name":"Aesop.simpGoal","line":52,"kind":"def","docLink":"./Aesop/Search/Expansion/Simp.html#Aesop.simpGoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion/Simp.html#Aesop.simpGoal\"><span class=\"name\">Aesop</span>.<span class=\"name\">simpGoal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Context\">Lean.Meta.Simp.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(simprocs : <a href=\"./Lean/Meta/Tactic/Simp/Simproc.html#Lean.Meta.Simp.SimprocsArray\">Lean.Meta.Simp.SimprocsArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(discharge? : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Simp/Rewrite.html#Lean.Meta.Simp.Discharge\">Lean.Meta.Simp.Discharge</a></span>)</span> <span class=\"fn\">none</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(simplifyTarget : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarIdsToSimp : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span> <span class=\"fn\">#[]</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(usedSimps : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.UsedSimps\">Lean.Meta.Simp.UsedSimps</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Aesop/Search/Expansion/Simp.html#Aesop.SimpResult\">Aesop.SimpResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/c51fa8ea4de8b203f64929cba19d139e555f9f6b/Aesop/Search/Expansion/Simp.lean#L44-L50","name":"Aesop.mkNormSimpOnlySyntax","line":44,"kind":"def","docLink":"./Aesop/Search/Expansion/Simp.html#Aesop.mkNormSimpOnlySyntax","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion/Simp.html#Aesop.mkNormSimpOnlySyntax\"><span class=\"name\">Aesop</span>.<span class=\"name\">mkNormSimpOnlySyntax</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(inGoal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(normSimpUseHyps : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(configStx? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(usedTheorems : <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.UsedSimps\">Lean.Meta.Simp.UsedSimps</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Meta.html#Lean.Syntax.Tactic\">Lean.Syntax.Tactic</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/c51fa8ea4de8b203f64929cba19d139e555f9f6b/Aesop/Search/Expansion/Simp.lean#L33-L42","name":"Aesop.mkNormSimpSyntax","line":33,"kind":"def","docLink":"./Aesop/Search/Expansion/Simp.html#Aesop.mkNormSimpSyntax","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion/Simp.html#Aesop.mkNormSimpSyntax\"><span class=\"name\">Aesop</span>.<span class=\"name\">mkNormSimpSyntax</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(normSimpUseHyps : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(configStx? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Meta.html#Lean.Syntax.Tactic\">Lean.Syntax.Tactic</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/c51fa8ea4de8b203f64929cba19d139e555f9f6b/Aesop/Search/Expansion/Simp.lean#L24-L27","name":"Aesop.SimpResult.newGoal?","line":24,"kind":"def","docLink":"./Aesop/Search/Expansion/Simp.html#Aesop.SimpResult.newGoal?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion/Simp.html#Aesop.SimpResult.newGoal?\"><span class=\"name\">Aesop</span>.<span class=\"name\">SimpResult</span>.<span class=\"name\">newGoal?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/Expansion/Simp.html#Aesop.SimpResult\">Aesop.SimpResult</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/c51fa8ea4de8b203f64929cba19d139e555f9f6b/Aesop/Search/Expansion/Simp.lean#L20-L20","name":"Aesop.SimpResult.simplified","line":20,"kind":"ctor","docLink":"./Aesop/Search/Expansion/Simp.html#Aesop.SimpResult.simplified","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion/Simp.html#Aesop.SimpResult.simplified\"><span class=\"name\">Aesop</span>.<span class=\"name\">SimpResult</span>.<span class=\"name\">simplified</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(newGoal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(usedTheorems : <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.UsedSimps\">Lean.Meta.Simp.UsedSimps</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/Expansion/Simp.html#Aesop.SimpResult\">Aesop.SimpResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/c51fa8ea4de8b203f64929cba19d139e555f9f6b/Aesop/Search/Expansion/Simp.lean#L19-L19","name":"Aesop.SimpResult.unchanged","line":19,"kind":"ctor","docLink":"./Aesop/Search/Expansion/Simp.html#Aesop.SimpResult.unchanged","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion/Simp.html#Aesop.SimpResult.unchanged\"><span class=\"name\">Aesop</span>.<span class=\"name\">SimpResult</span>.<span class=\"name\">unchanged</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(newGoal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/Expansion/Simp.html#Aesop.SimpResult\">Aesop.SimpResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/c51fa8ea4de8b203f64929cba19d139e555f9f6b/Aesop/Search/Expansion/Simp.lean#L18-L18","name":"Aesop.SimpResult.solved","line":18,"kind":"ctor","docLink":"./Aesop/Search/Expansion/Simp.html#Aesop.SimpResult.solved","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion/Simp.html#Aesop.SimpResult.solved\"><span class=\"name\">Aesop</span>.<span class=\"name\">SimpResult</span>.<span class=\"name\">solved</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(usedTheorems : <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.UsedSimps\">Lean.Meta.Simp.UsedSimps</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/Expansion/Simp.html#Aesop.SimpResult\">Aesop.SimpResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/c51fa8ea4de8b203f64929cba19d139e555f9f6b/Aesop/Search/Expansion/Simp.lean#L17-L20","name":"Aesop.SimpResult","line":17,"kind":"inductive","docLink":"./Aesop/Search/Expansion/Simp.html#Aesop.SimpResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion/Simp.html#Aesop.SimpResult\"><span class=\"name\">Aesop</span>.<span class=\"name\">SimpResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}
{"name":"LeanColls.Data.Transformer.View","instances":[{"typeNames":["LeanColls.View"],"name":"LeanColls.View.instFoldView","className":"LeanColls.Fold"},{"typeNames":["LeanColls.View"],"name":"LeanColls.View.instAppendView","className":"Append"}],"imports":["Init","LeanColls.Classes.Ops"],"declarations":[{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Transformer/View.lean#L79-L80","name":"LeanColls.View.instAppendView","line":79,"kind":"instance","docLink":"./LeanColls/Data/Transformer/View.html#LeanColls.View.instAppendView","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View.instAppendView\"><span class=\"name\">LeanColls</span>.<span class=\"name\">View</span>.<span class=\"name\">instAppendView</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{τ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Append\">Append</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View\">LeanColls.View</a> <span class=\"fn\">τ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Transformer/View.lean#L75-L77","name":"LeanColls.View.instFoldView","line":75,"kind":"instance","docLink":"./LeanColls/Data/Transformer/View.html#LeanColls.View.instFoldView","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View.instFoldView\"><span class=\"name\">LeanColls</span>.<span class=\"name\">View</span>.<span class=\"name\">instFoldView</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{τ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/Ops.html#LeanColls.Fold\">LeanColls.Fold</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View\">LeanColls.View</a> <span class=\"fn\">τ</span></span>)</span> <span class=\"fn\">τ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Transformer/View.lean#L53-L73","name":"LeanColls.View.foldM","line":53,"kind":"def","docLink":"./LeanColls/Data/Transformer/View.html#LeanColls.View.foldM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View.foldM\"><span class=\"name\">LeanColls</span>.<span class=\"name\">View</span>.<span class=\"name\">foldM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{τ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">τ</span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(init : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View\">LeanColls.View</a> <span class=\"fn\">τ</span></span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Transformer/View.lean#L30-L50","name":"LeanColls.View.fold","line":30,"kind":"def","docLink":"./LeanColls/Data/Transformer/View.html#LeanColls.View.fold","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View.fold\"><span class=\"name\">LeanColls</span>.<span class=\"name\">View</span>.<span class=\"name\">fold</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{τ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">τ</span> → <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(init : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View\">LeanColls.View</a> <span class=\"fn\">τ</span></span> → <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Transformer/View.lean#L25-L25","name":"LeanColls.View.append","line":25,"kind":"ctor","docLink":"./LeanColls/Data/Transformer/View.html#LeanColls.View.append","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View.append\"><span class=\"name\">LeanColls</span>.<span class=\"name\">View</span>.<span class=\"name\">append</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{τ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(v1 : <span class=\"fn\"><a href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View\">LeanColls.View</a> <span class=\"fn\">τ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v2 : <span class=\"fn\"><a href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View\">LeanColls.View</a> <span class=\"fn\">τ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View\">LeanColls.View</a> <span class=\"fn\">τ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Transformer/View.lean#L24-L24","name":"LeanColls.View.flatMap","line":24,"kind":"ctor","docLink":"./LeanColls/Data/Transformer/View.html#LeanColls.View.flatMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View.flatMap\"><span class=\"name\">LeanColls</span>.<span class=\"name\">View</span>.<span class=\"name\">flatMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{τ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{τ' : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">τ</span> → <span class=\"fn\"><a href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View\">LeanColls.View</a> <span class=\"fn\">τ'</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View\">LeanColls.View</a> <span class=\"fn\">τ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View\">LeanColls.View</a> <span class=\"fn\">τ'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Transformer/View.lean#L23-L23","name":"LeanColls.View.filterMap","line":23,"kind":"ctor","docLink":"./LeanColls/Data/Transformer/View.html#LeanColls.View.filterMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View.filterMap\"><span class=\"name\">LeanColls</span>.<span class=\"name\">View</span>.<span class=\"name\">filterMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{τ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{τ' : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">τ</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">τ'</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View\">LeanColls.View</a> <span class=\"fn\">τ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View\">LeanColls.View</a> <span class=\"fn\">τ'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Transformer/View.lean#L22-L22","name":"LeanColls.View.filter","line":22,"kind":"ctor","docLink":"./LeanColls/Data/Transformer/View.html#LeanColls.View.filter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View.filter\"><span class=\"name\">LeanColls</span>.<span class=\"name\">View</span>.<span class=\"name\">filter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{τ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">τ</span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View\">LeanColls.View</a> <span class=\"fn\">τ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View\">LeanColls.View</a> <span class=\"fn\">τ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Transformer/View.lean#L21-L21","name":"LeanColls.View.map","line":21,"kind":"ctor","docLink":"./LeanColls/Data/Transformer/View.html#LeanColls.View.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View.map\"><span class=\"name\">LeanColls</span>.<span class=\"name\">View</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{τ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{τ' : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">τ</span> → <span class=\"fn\">τ'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View\">LeanColls.View</a> <span class=\"fn\">τ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View\">LeanColls.View</a> <span class=\"fn\">τ'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Transformer/View.lean#L20-L20","name":"LeanColls.View.of","line":20,"kind":"ctor","docLink":"./LeanColls/Data/Transformer/View.html#LeanColls.View.of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View.of\"><span class=\"name\">LeanColls</span>.<span class=\"name\">View</span>.<span class=\"name\">of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{τ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/Ops.html#LeanColls.Fold\">LeanColls.Fold</a> <span class=\"fn\">C</span> <span class=\"fn\">τ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View\">LeanColls.View</a> <span class=\"fn\">τ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Transformer/View.lean#L19-L25","name":"LeanColls.View","line":19,"kind":"inductive","docLink":"./LeanColls/Data/Transformer/View.html#LeanColls.View","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Transformer/View.html#LeanColls.View\"><span class=\"name\">LeanColls</span>.<span class=\"name\">View</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> (max (u + 1) (v + 1) (w + 1))</span></div></div>"}]}
{"name":"LeanColls.Classes.IndexType.Basic","instances":[{"typeNames":["LeanColls.IndexType.Univ","Fin"],"name":"LeanColls.IndexType.instFoldUnivFin","className":"LeanColls.Fold"},{"typeNames":["Eq"],"name":"LeanColls.IndexType.instDecidableEq","className":"Decidable"},{"typeNames":["Unit"],"name":"LeanColls.IndexType.instIndexTypeUnit","className":"LeanColls.IndexType"},{"typeNames":["Unit"],"name":"LeanColls.IndexType.instLawfulIndexTypeUnitInstIndexTypeUnit","className":"LeanColls.LawfulIndexType"},{"typeNames":["Fin"],"name":"LeanColls.IndexType.instIndexTypeFin","className":"LeanColls.IndexType"},{"typeNames":["Fin"],"name":"LeanColls.IndexType.instLawfulIndexTypeFinInstIndexTypeFin","className":"LeanColls.LawfulIndexType"},{"typeNames":["Prod"],"name":"LeanColls.IndexType.instIndexTypeProd","className":"LeanColls.IndexType"},{"typeNames":["Prod"],"name":"LeanColls.IndexType.instLawfulIndexTypeProdInstIndexTypeProd","className":"LeanColls.LawfulIndexType"},{"typeNames":["Sigma"],"name":"LeanColls.IndexType.instIndexTypeSigma","className":"LeanColls.IndexType"},{"typeNames":["Sigma"],"name":"LeanColls.IndexType.instLawfulIndexTypeSigmaInstIndexTypeSigma","className":"LeanColls.LawfulIndexType"},{"typeNames":["Sum"],"name":"LeanColls.IndexType.instIndexTypeSum","className":"LeanColls.IndexType"},{"typeNames":["Sum"],"name":"LeanColls.IndexType.instLawfulIndexTypeSumInstIndexTypeSum","className":"LeanColls.LawfulIndexType"}],"imports":["Init","Mathlib.Tactic.FinCases","Mathlib.Tactic.ProxyType","LeanColls.Classes.Ops","LeanColls.Data.Transformer.View","LeanColls.MathlibUpstream"],"declarations":[{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L300-L304","name":"LeanColls.IndexType.mkIndexTypeInstanceHandler","line":300,"kind":"def","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.mkIndexTypeInstanceHandler","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.mkIndexTypeInstanceHandler\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">mkIndexTypeInstanceHandler</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L283-L298","name":"LeanColls.IndexType.mkIndexType","line":283,"kind":"def","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.mkIndexType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.mkIndexType\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">mkIndexType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L281-L281","name":"LeanColls.IndexType.«termDerive_lawfulindextype%_»","line":281,"kind":"def","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.«termDerive_lawfulindextype%_»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.«termDerive_lawfulindextype%_»\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">«termDerive_lawfulindextype%_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L280-L280","name":"LeanColls.IndexType.«termDerive_indextype%_»","line":280,"kind":"def","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.«termDerive_indextype%_»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.«termDerive_indextype%_»\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">«termDerive_indextype%_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L237-L269","name":"LeanColls.IndexType.instLawfulIndexTypeSumInstIndexTypeSum","line":237,"kind":"instance","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.instLawfulIndexTypeSumInstIndexTypeSum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.instLawfulIndexTypeSumInstIndexTypeSum\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">instLawfulIndexTypeSumInstIndexTypeSum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L217-L235","name":"LeanColls.IndexType.instIndexTypeSum","line":217,"kind":"instance","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.instIndexTypeSum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.instIndexTypeSum\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">instIndexTypeSum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L211-L212","name":"LeanColls.IndexType.instLawfulIndexTypeSigmaInstIndexTypeSigma","line":211,"kind":"instance","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.instLawfulIndexTypeSigmaInstIndexTypeSigma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.instLawfulIndexTypeSigmaInstIndexTypeSigma\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">instLawfulIndexTypeSigmaInstIndexTypeSigma</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">(<span class=\"fn\">(_ : <span class=\"fn\">α</span>) × <span class=\"fn\">β</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L208-L209","name":"LeanColls.IndexType.instIndexTypeSigma","line":208,"kind":"instance","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.instIndexTypeSigma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.instIndexTypeSigma\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">instIndexTypeSigma</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">(<span class=\"fn\">(_ : <span class=\"fn\">α</span>) × <span class=\"fn\">β</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L186-L203","name":"LeanColls.IndexType.instLawfulIndexTypeProdInstIndexTypeProd","line":186,"kind":"instance","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.instLawfulIndexTypeProdInstIndexTypeProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.instLawfulIndexTypeProdInstIndexTypeProd\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">instLawfulIndexTypeProdInstIndexTypeProd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L177-L184","name":"LeanColls.IndexType.instIndexTypeProd","line":177,"kind":"instance","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.instIndexTypeProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.instIndexTypeProd\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">instIndexTypeProd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L159-L168","name":"LeanColls.IndexType.instLawfulIndexTypeFinInstIndexTypeFin","line":159,"kind":"instance","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.instLawfulIndexTypeFinInstIndexTypeFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.instLawfulIndexTypeFinInstIndexTypeFin\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">instLawfulIndexTypeFinInstIndexTypeFin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L154-L157","name":"LeanColls.IndexType.instIndexTypeFin","line":154,"kind":"instance","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.instIndexTypeFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.instIndexTypeFin\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">instIndexTypeFin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L142-L150","name":"LeanColls.IndexType.instLawfulIndexTypeUnitInstIndexTypeUnit","line":142,"kind":"instance","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.instLawfulIndexTypeUnitInstIndexTypeUnit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.instLawfulIndexTypeUnitInstIndexTypeUnit\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">instLawfulIndexTypeUnitInstIndexTypeUnit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L135-L140","name":"LeanColls.IndexType.instIndexTypeUnit","line":135,"kind":"instance","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.instIndexTypeUnit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.instIndexTypeUnit\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">instIndexTypeUnit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L121-L131","name":"LeanColls.IndexType.ofEquivLawful","line":121,"kind":"def","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.ofEquivLawful","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.ofEquivLawful\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">ofEquivLawful</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[I' : <span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">ι'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[LI' : <span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">ι'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι'</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">ι</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L115-L119","name":"LeanColls.IndexType.ofEquiv","line":115,"kind":"def","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.ofEquiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.ofEquiv\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">ofEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι' : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">ι'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι'</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">ι</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L109-L110","name":"LeanColls.IndexType.instDecidableEq","line":109,"kind":"instance","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.instDecidableEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.instDecidableEq\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">instDecidableEq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L104-L107","name":"LeanColls.IndexType.mem_toList_univ","line":104,"kind":"theorem","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.mem_toList_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.mem_toList_univ\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">mem_toList_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./LeanColls/Classes/Ops.html#LeanColls.ToList.toList\">LeanColls.toList</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.univ\">LeanColls.IndexType.univ</a> <span class=\"fn\">α</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L94-L101","name":"LeanColls.IndexType.get_toList_univ","line":94,"kind":"theorem","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.get_toList_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.get_toList_univ\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">get_toList_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#List.length\">List.length</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Classes/Ops.html#LeanColls.ToList.toList\">LeanColls.toList</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.univ\">LeanColls.IndexType.univ</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List.get\">List.get</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Classes/Ops.html#LeanColls.ToList.toList\">LeanColls.toList</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.univ\">LeanColls.IndexType.univ</a> <span class=\"fn\">α</span></span>)</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.fromFin\">LeanColls.IndexType.fromFin</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/Fin/Basic.html#Fin.cast\">Fin.cast</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List.length\">List.length</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Classes/Ops.html#LeanColls.ToList.toList\">LeanColls.toList</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.univ\">LeanColls.IndexType.univ</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.card\">LeanColls.IndexType.card</a> <span class=\"fn\">α</span></span></span>)</span> <span class=\"fn\">i</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L89-L91","name":"LeanColls.IndexType.length_toList_univ","line":89,"kind":"theorem","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.length_toList_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.length_toList_univ\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">length_toList_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List.length\">List.length</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Classes/Ops.html#LeanColls.ToList.toList\">LeanColls.toList</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.univ\">LeanColls.IndexType.univ</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.card\">LeanColls.IndexType.card</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L83-L86","name":"LeanColls.IndexType.fromFin_eq_iff","line":83,"kind":"theorem","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.fromFin_eq_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.fromFin_eq_iff\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">fromFin_eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.card\">LeanColls.IndexType.card</a> <span class=\"fn\">ι</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.card\">LeanColls.IndexType.card</a> <span class=\"fn\">ι</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.fromFin\">LeanColls.IndexType.fromFin</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.fromFin\">LeanColls.IndexType.fromFin</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L78-L81","name":"LeanColls.IndexType.toFin_eq_iff","line":78,"kind":"theorem","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.toFin_eq_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.toFin_eq_iff\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">toFin_eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.toFin\">LeanColls.IndexType.toFin</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.toFin\">LeanColls.IndexType.toFin</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L72-L76","name":"LeanColls.IndexType.toEquiv","line":72,"kind":"def","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.toEquiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.toEquiv\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">toEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ι</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.card\">LeanColls.IndexType.card</a> <span class=\"fn\">ι</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L67-L70","name":"LeanColls.IndexType.fromFin_inj","line":67,"kind":"theorem","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.fromFin_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.fromFin_inj\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">fromFin_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.card\">LeanColls.IndexType.card</a> <span class=\"fn\">ι</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.card\">LeanColls.IndexType.card</a> <span class=\"fn\">ι</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.fromFin\">LeanColls.IndexType.fromFin</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.fromFin\">LeanColls.IndexType.fromFin</a> <span class=\"fn\">j</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L62-L65","name":"LeanColls.IndexType.toFin_inj","line":62,"kind":"theorem","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.toFin_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.toFin_inj\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">toFin_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.toFin\">LeanColls.IndexType.toFin</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.toFin\">LeanColls.IndexType.toFin</a> <span class=\"fn\">j</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L58-L60","name":"LeanColls.IndexType.fromFin_toFin","line":58,"kind":"theorem","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.fromFin_toFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.fromFin_toFin\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">fromFin_toFin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.fromFin\">LeanColls.IndexType.fromFin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.toFin\">LeanColls.IndexType.toFin</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L54-L56","name":"LeanColls.IndexType.toFin_fromFin","line":54,"kind":"theorem","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.toFin_fromFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.toFin_fromFin\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">toFin_fromFin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.card\">LeanColls.IndexType.card</a> <span class=\"fn\">ι</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.toFin\">LeanColls.IndexType.toFin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.fromFin\">LeanColls.IndexType.fromFin</a> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L48-L48","name":"LeanColls.LawfulIndexType.toList_eq_ofFn","line":48,"kind":"def","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType.toList_eq_ofFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType.toList_eq_ofFn\"><span class=\"name\">LeanColls</span>.<span class=\"name\">LawfulIndexType</span>.<span class=\"name\">toList_eq_ofFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[I : <span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./LeanColls/Classes/Ops.html#LeanColls.ToList.toList\">LeanColls.toList</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.univ\">LeanColls.IndexType.univ</a> <span class=\"fn\">ι</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/List/Basic.html#List.ofFn\">List.ofFn</a> <span class=\"fn\">LeanColls.IndexType.fromFin</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L47-L47","name":"LeanColls.LawfulIndexType.rightInv","line":47,"kind":"def","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType.rightInv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType.rightInv\"><span class=\"name\">LeanColls</span>.<span class=\"name\">LawfulIndexType</span>.<span class=\"name\">rightInv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[I : <span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">LeanColls.IndexType.fromFin</span> <span class=\"fn\">LeanColls.IndexType.toFin</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L46-L46","name":"LeanColls.LawfulIndexType.leftInv","line":46,"kind":"def","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType.leftInv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType.leftInv\"><span class=\"name\">LeanColls</span>.<span class=\"name\">LawfulIndexType</span>.<span class=\"name\">leftInv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[I : <span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\">LeanColls.IndexType.fromFin</span> <span class=\"fn\">LeanColls.IndexType.toFin</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L42-L42","name":"LeanColls.LawfulIndexType.mk","line":42,"kind":"ctor","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType.mk\"><span class=\"name\">LeanColls</span>.<span class=\"name\">LawfulIndexType</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[I : <span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toToList : <span class=\"fn\"><a href=\"./LeanColls/Classes/Ops.html#LeanColls.Fold.ToList\">LeanColls.Fold.ToList</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.Univ\">LeanColls.IndexType.Univ</a> <span class=\"fn\">ι</span></span>)</span> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(leftInv : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\">LeanColls.IndexType.fromFin</span> <span class=\"fn\">LeanColls.IndexType.toFin</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rightInv : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">LeanColls.IndexType.fromFin</span> <span class=\"fn\">LeanColls.IndexType.toFin</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(toList_eq_ofFn : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./LeanColls/Classes/Ops.html#LeanColls.ToList.toList\">LeanColls.toList</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.univ\">LeanColls.IndexType.univ</a> <span class=\"fn\">ι</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/List/Basic.html#List.ofFn\">List.ofFn</a> <span class=\"fn\">LeanColls.IndexType.fromFin</span></span></span>)</span> <a href=\"./LeanColls/Classes/IndexType/Basic.html#_auto._@.LeanColls.Classes.IndexType.Basic._hyg.126\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\">LeanColls.LawfulIndexType</a> <span class=\"fn\">ι</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L42-L48","name":"LeanColls.LawfulIndexType","line":42,"kind":"class","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.LawfulIndexType\"><span class=\"name\">LeanColls</span>.<span class=\"name\">LawfulIndexType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ι : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[I : <span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./LeanColls/Classes/Ops.html#LeanColls.Fold.ToList\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Fold</span>.<span class=\"name\">ToList</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L39-L39","name":"LeanColls.IndexType.fromFin","line":39,"kind":"def","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.fromFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.fromFin\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">fromFin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.card\">LeanColls.IndexType.card</a> <span class=\"fn\">ι</span></span>)</span></span> → <span class=\"fn\">ι</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L38-L38","name":"LeanColls.IndexType.toFin","line":38,"kind":"def","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.toFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.toFin\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">toFin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.card\">LeanColls.IndexType.card</a> <span class=\"fn\">ι</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L37-L37","name":"LeanColls.IndexType.card","line":37,"kind":"def","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.card","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.card\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">card</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ι : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L32-L32","name":"LeanColls.IndexType.mk","line":32,"kind":"ctor","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.mk\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toToList : <span class=\"fn\"><a href=\"./LeanColls/Classes/Ops.html#LeanColls.ToList\">LeanColls.ToList</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.Univ\">LeanColls.IndexType.Univ</a> <span class=\"fn\">ι</span></span>)</span> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toFold : <span class=\"fn\"><a href=\"./LeanColls/Classes/Ops.html#LeanColls.Fold\">LeanColls.Fold</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.Univ\">LeanColls.IndexType.Univ</a> <span class=\"fn\">ι</span></span>)</span> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(card : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(toFin : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">card</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fromFin : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">card</span></span> → <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">ι</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L32-L40","name":"LeanColls.IndexType","line":32,"kind":"class","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ι : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./LeanColls/Classes/Ops.html#LeanColls.ToList\"><span class=\"name\">LeanColls</span>.<span class=\"name\">ToList</span></a></span></span>\n, <span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./LeanColls/Classes/Ops.html#LeanColls.Fold\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Fold</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u (w + 1))</div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L28-L30","name":"LeanColls.IndexType.instFoldUnivFin","line":28,"kind":"instance","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.instFoldUnivFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.instFoldUnivFin\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">instFoldUnivFin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/Ops.html#LeanColls.Fold\">LeanColls.Fold</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.Univ\">LeanColls.IndexType.Univ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L26-L26","name":"LeanColls.IndexType.univ","line":26,"kind":"def","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.univ\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">univ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ι : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.Univ\">LeanColls.IndexType.Univ</a> <span class=\"fn\">ι</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L24-L24","name":"LeanColls.IndexType.Univ.mk","line":24,"kind":"ctor","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.Univ.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.Univ.mk\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">Univ</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.Univ\">LeanColls.IndexType.Univ</a> <span class=\"fn\">ι</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/IndexType/Basic.lean#L24-L24","name":"LeanColls.IndexType.Univ","line":24,"kind":"structure","docLink":"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.Univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType.Univ\"><span class=\"name\">LeanColls</span>.<span class=\"name\">IndexType</span>.<span class=\"name\">Univ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ι : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}
{"name":"LeanColls.Classes.Indexed.Notation","instances":[],"imports":["Init","LeanColls.Classes.Indexed.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/Indexed/Notation.lean#L192-L195","name":"LeanColls.Indexed.Notation.unexpandIndexedGet","line":192,"kind":"def","docLink":"./LeanColls/Classes/Indexed/Notation.html#LeanColls.Indexed.Notation.unexpandIndexedGet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/Indexed/Notation.html#LeanColls.Indexed.Notation.unexpandIndexedGet\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Indexed</span>.<span class=\"name\">Notation</span>.<span class=\"name\">unexpandIndexedGet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.PrettyPrinter.Unexpander\">Lean.PrettyPrinter.Unexpander</a></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/Indexed/Notation.lean#L102-L104","name":"LeanColls.Indexed.Notation.«doElem__[_,,]•=_»","line":102,"kind":"def","docLink":"./LeanColls/Classes/Indexed/Notation.html#LeanColls.Indexed.Notation.«doElem__[_,,]•=_»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/Indexed/Notation.html#LeanColls.Indexed.Notation.«doElem__[_,,]•=_»\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Indexed</span>.<span class=\"name\">Notation</span>.<span class=\"name\">«doElem__[_,,]•=_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/Indexed/Notation.lean#L98-L100","name":"LeanColls.Indexed.Notation.«doElem__[_,,]/=_»","line":98,"kind":"def","docLink":"./LeanColls/Classes/Indexed/Notation.html#LeanColls.Indexed.Notation.«doElem__[_,,]/=_»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/Indexed/Notation.html#LeanColls.Indexed.Notation.«doElem__[_,,]/=_»\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Indexed</span>.<span class=\"name\">Notation</span>.<span class=\"name\">«doElem__[_,,]/=_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/Indexed/Notation.lean#L94-L96","name":"LeanColls.Indexed.Notation.«doElem__[_,,]*=_»","line":94,"kind":"def","docLink":"./LeanColls/Classes/Indexed/Notation.html#LeanColls.Indexed.Notation.«doElem__[_,,]*=_»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/Indexed/Notation.html#LeanColls.Indexed.Notation.«doElem__[_,,]*=_»\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Indexed</span>.<span class=\"name\">Notation</span>.<span class=\"name\">«doElem__[_,,]*=_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/Indexed/Notation.lean#L90-L92","name":"LeanColls.Indexed.Notation.«doElem__[_,,]-=_»","line":90,"kind":"def","docLink":"./LeanColls/Classes/Indexed/Notation.html#LeanColls.Indexed.Notation.«doElem__[_,,]-=_»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/Indexed/Notation.html#LeanColls.Indexed.Notation.«doElem__[_,,]-=_»\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Indexed</span>.<span class=\"name\">Notation</span>.<span class=\"name\">«doElem__[_,,]-=_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/Indexed/Notation.lean#L86-L88","name":"LeanColls.Indexed.Notation.«doElem__[_,,]+=_»","line":86,"kind":"def","docLink":"./LeanColls/Classes/Indexed/Notation.html#LeanColls.Indexed.Notation.«doElem__[_,,]+=_»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/Indexed/Notation.html#LeanColls.Indexed.Notation.«doElem__[_,,]+=_»\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Indexed</span>.<span class=\"name\">Notation</span>.<span class=\"name\">«doElem__[_,,]+=_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/Indexed/Notation.lean#L82-L84","name":"LeanColls.Indexed.Notation.«doElem__[_,,]←_»","line":82,"kind":"def","docLink":"./LeanColls/Classes/Indexed/Notation.html#LeanColls.Indexed.Notation.«doElem__[_,,]←_»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/Indexed/Notation.html#LeanColls.Indexed.Notation.«doElem__[_,,]←_»\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Indexed</span>.<span class=\"name\">Notation</span>.<span class=\"name\">«doElem__[_,,]←_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/Indexed/Notation.lean#L78-L80","name":"LeanColls.Indexed.Notation.«doElem__[_,,]:=_»","line":78,"kind":"def","docLink":"./LeanColls/Classes/Indexed/Notation.html#LeanColls.Indexed.Notation.«doElem__[_,,]:=_»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/Indexed/Notation.html#LeanColls.Indexed.Notation.«doElem__[_,,]:=_»\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Indexed</span>.<span class=\"name\">Notation</span>.<span class=\"name\">«doElem__[_,,]:=_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/Indexed/Notation.lean#L66-L75","name":"LeanColls.Indexed.Notation.indexedGet","line":66,"kind":"def","docLink":"./LeanColls/Classes/Indexed/Notation.html#LeanColls.Indexed.Notation.indexedGet","doc":"The syntax `x[i,j,k]` gets the element of `x : X` indexed by `(i,j,k)`. It is required that there is\nan instance `Indexed X I E` and `(i,j,k)` has type `I`.\n\nThis notation also support ranges, `x[:i,j₁:j₂,k]` returns a slice of `x`.\n\nNote that product is right associated thus `x[i,j,k]`, `x[i,(j,k)]` and `x[(i,j,k)]` result in\nthe same expression.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/Indexed/Notation.html#LeanColls.Indexed.Notation.indexedGet\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Indexed</span>.<span class=\"name\">Notation</span>.<span class=\"name\">indexedGet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Classes/Indexed/Notation.lean#L62-L63","name":"LeanColls.Indexed.Notation.elemIndex","line":62,"kind":"def","docLink":"./LeanColls/Classes/Indexed/Notation.html#LeanColls.Indexed.Notation.elemIndex","doc":"Element index can either be an index or a range. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Classes/Indexed/Notation.html#LeanColls.Indexed.Notation.elemIndex\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Indexed</span>.<span class=\"name\">Notation</span>.<span class=\"name\">elemIndex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"}]}
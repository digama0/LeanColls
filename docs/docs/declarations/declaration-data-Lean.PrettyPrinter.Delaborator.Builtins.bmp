{"name":"Lean.PrettyPrinter.Delaborator.Builtins","instances":[],"imports":["Init","Lean.PrettyPrinter.Delaborator.Basic","Lean.PrettyPrinter.Delaborator.SubExpr","Lean.PrettyPrinter.Delaborator.TopDownAnalyze","Lean.Parser"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L956-L980","name":"Lean.PrettyPrinter.Delaborator.delabConstWithSignature.delabParams","line":956,"kind":"opaque","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabConstWithSignature.delabParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabConstWithSignature.delabParams\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabConstWithSignature</span>.<span class=\"name\">delabParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(idStx : <a href=\"./Init/Meta.html#Lean.Syntax.Ident\">Lean.Ident</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(groups : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntaxArray\">Lean.TSyntaxArray</a> <span class=\"fn\">`Lean.Parser.Term.bracketedBinder</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(curIds : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Ident\">Lean.Ident</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">Lean.PrettyPrinter.Delaborator.DelabM</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L946-L980","name":"Lean.PrettyPrinter.Delaborator.delabConstWithSignature","line":946,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabConstWithSignature","doc":"Pretty-prints a constant `c` as `c.{<levels>} <params> : <type>`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabConstWithSignature\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabConstWithSignature</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L937-L937","name":"Lean.PrettyPrinter.Delaborator.declSigWithId","line":937,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.declSigWithId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.declSigWithId\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">declSigWithId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L932-L932","name":"Lean.PrettyPrinter.Delaborator.delabNameMkNum","line":932,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabNameMkNum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabNameMkNum\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabNameMkNum</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L926-L929","name":"Lean.PrettyPrinter.Delaborator.delabNameMkStr","line":926,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabNameMkStr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabNameMkStr\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabNameMkStr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L919-L923","name":"Lean.PrettyPrinter.Delaborator.reifyName","line":919,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.reifyName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.reifyName\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">reifyName</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> â†’ <span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">Lean.PrettyPrinter.Delaborator.DelabM</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L913-L917","name":"Lean.PrettyPrinter.Delaborator.delabDo","line":913,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabDo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabDo\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabDo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L910-L910","name":"Lean.PrettyPrinter.Delaborator.delabDoElems.prependAndRec","line":910,"kind":"opaque","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabDoElems.prependAndRec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabDoElems.prependAndRec\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabDoElems</span>.<span class=\"name\">prependAndRec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">Lean.PrettyPrinter.Delaborator.DelabM</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">Lean.PrettyPrinter.Delaborator.DelabM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L870-L910","name":"Lean.PrettyPrinter.Delaborator.delabDoElems","line":870,"kind":"opaque","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabDoElems","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabDoElems\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabDoElems</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">Lean.PrettyPrinter.Delaborator.DelabM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L868-L868","name":"Lean.PrettyPrinter.Delaborator.delabPSigma","line":868,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabPSigma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabPSigma\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabPSigma</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L865-L865","name":"Lean.PrettyPrinter.Delaborator.delabSigma","line":865,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabSigma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabSigma\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabSigma</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L851-L862","name":"Lean.PrettyPrinter.Delaborator.delabSigmaCore","line":851,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabSigmaCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabSigmaCore\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabSigmaCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sigma : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L839-L848","name":"Lean.PrettyPrinter.Delaborator.delabNamedPattern","line":839,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabNamedPattern","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabNamedPattern\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabNamedPattern</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L831-L836","name":"Lean.PrettyPrinter.Delaborator.delabCond","line":831,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabCond","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabCond\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabCond</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L822-L828","name":"Lean.PrettyPrinter.Delaborator.delabDIte.delabBranch","line":822,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabDIte.delabBranch","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabDIte.delabBranch\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabDIte</span>.<span class=\"name\">delabBranch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">Lean.PrettyPrinter.Delaborator.DelabM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L814-L828","name":"Lean.PrettyPrinter.Delaborator.delabDIte","line":814,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabDIte","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabDIte\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabDIte</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L797-L811","name":"Lean.PrettyPrinter.Delaborator.delabProjectionApp","line":797,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabProjectionApp","doc":"Delaborate a call to a projection function such as `Prod.fst`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabProjectionApp\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabProjectionApp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L786-L793","name":"Lean.PrettyPrinter.Delaborator.delabProj","line":786,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabProj","doc":"Delaborate a projection primitive. These do not usually occur in\nuser code, but are pretty-printed when e.g. `#print`ing a projection\nfunction.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabProj\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabProj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L761-L778","name":"Lean.PrettyPrinter.Delaborator.delabOfScientific","line":761,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabOfScientific","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabOfScientific\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabOfScientific</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L756-L757","name":"Lean.PrettyPrinter.Delaborator.delabHDiv","line":756,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabHDiv","doc":"Delaborates a rational number literal.\n`@OfNat.ofNat _ n _ / @OfNat.ofNat _ m` ~> `n / m`\nand `-@OfNat.ofNat _ n _ / @OfNat.ofNat _ m` ~> `-n / m`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabHDiv\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabHDiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L747-L748","name":"Lean.PrettyPrinter.Delaborator.delabNeg","line":747,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabNeg","doc":"Delaborates the negative of an `OfNat.ofNat` literal.\n`-@OfNat.ofNat _ n _` ~> `-n`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabNeg\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabNeg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L739-L740","name":"Lean.PrettyPrinter.Delaborator.delabOfNat","line":739,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabOfNat","doc":"Delaborates an `OfNat.ofNat` literal.\n`@OfNat.ofNat _ n _` ~> `n`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabOfNat\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabOfNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L720-L732","name":"Lean.PrettyPrinter.Delaborator.delabDivRatCore","line":720,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabDivRatCore","doc":"Core function that delaborates a rational literal that is the division of an integer literal\nby a natural number literal.\nThe division must be homogeneous for it to count as a rational literal.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabDivRatCore\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabDivRatCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(showType : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L705-L713","name":"Lean.PrettyPrinter.Delaborator.delabNegIntCore","line":705,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabNegIntCore","doc":"Core function that delaborates a negative integer literal (a `Neg.neg` applied to `OfNat.ofNat`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabNegIntCore\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabNegIntCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(showType : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L693-L700","name":"Lean.PrettyPrinter.Delaborator.delabOfNatCore","line":693,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabOfNatCore","doc":"Core function that delaborates a natural number (an `OfNat.ofNat` literal).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabOfNatCore\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabOfNatCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(showType : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L680-L688","name":"Lean.PrettyPrinter.Delaborator.delabLit","line":680,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabLit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabLit\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabLit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L667-L677","name":"Lean.PrettyPrinter.Delaborator.delabLetE","line":667,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabLetE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabLetE\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabLetE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L640-L664","name":"Lean.PrettyPrinter.Delaborator.delabForall","line":640,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabForall","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabForall\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabForall</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L564-L617","name":"Lean.PrettyPrinter.Delaborator.delabLam","line":564,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabLam","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabLam\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabLam</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L519-L522","name":"Lean.PrettyPrinter.Delaborator.hasIdent","line":519,"kind":"opaque","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.hasIdent","doc":"Check for a `Syntax.ident` of the given name anywhere in the tree.\nThis is usually a bad idea since it does not check for shadowing bindings,\nbut in the delaborator we assume that bindings are never shadowed.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.hasIdent\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">hasIdent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(id : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> â†’ <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L502-L512","name":"Lean.PrettyPrinter.Delaborator.delabMData","line":502,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabMData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabMData\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabMData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L488-L499","name":"Lean.PrettyPrinter.Delaborator.delabLetFun","line":488,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabLetFun","doc":"Delaborates applications of the form `letFun v (fun x => b)` as `let_fun x := v; b`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabLetFun\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabLetFun</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L424-L482","name":"Lean.PrettyPrinter.Delaborator.delabAppMatch","line":424,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabAppMatch","doc":"Delaborate applications of \"matchers\" such as\n```\nList.map.match_1 : {Î± : Type _} â†’\n  (motive : List Î± â†’ Sort _) â†’\n    (x : List Î±) â†’ (Unit â†’ motive List.nil) â†’ ((a : Î±) â†’ (as : List Î±) â†’ motive (a :: as)) â†’ motive x\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabAppMatch\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabAppMatch</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L354-L354","name":"Lean.PrettyPrinter.Delaborator.AppMatchState.moreArgs","line":354,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState.moreArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState.moreArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">AppMatchState</span>.<span class=\"name\">moreArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState\">Lean.PrettyPrinter.Delaborator.AppMatchState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L352-L352","name":"Lean.PrettyPrinter.Delaborator.AppMatchState.rhss","line":352,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState.rhss","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState.rhss\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">AppMatchState</span>.<span class=\"name\">rhss</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState\">Lean.PrettyPrinter.Delaborator.AppMatchState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L351-L351","name":"Lean.PrettyPrinter.Delaborator.AppMatchState.varNames","line":351,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState.varNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState.varNames\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">AppMatchState</span>.<span class=\"name\">varNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState\">Lean.PrettyPrinter.Delaborator.AppMatchState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L350-L350","name":"Lean.PrettyPrinter.Delaborator.AppMatchState.discrs","line":350,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState.discrs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState.discrs\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">AppMatchState</span>.<span class=\"name\">discrs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState\">Lean.PrettyPrinter.Delaborator.AppMatchState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L349-L349","name":"Lean.PrettyPrinter.Delaborator.AppMatchState.motiveNamed","line":349,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState.motiveNamed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState.motiveNamed\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">AppMatchState</span>.<span class=\"name\">motiveNamed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState\">Lean.PrettyPrinter.Delaborator.AppMatchState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L348-L348","name":"Lean.PrettyPrinter.Delaborator.AppMatchState.motive","line":348,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState.motive","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState.motive\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">AppMatchState</span>.<span class=\"name\">motive</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState\">Lean.PrettyPrinter.Delaborator.AppMatchState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L347-L347","name":"Lean.PrettyPrinter.Delaborator.AppMatchState.params","line":347,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState.params","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState.params\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">AppMatchState</span>.<span class=\"name\">params</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState\">Lean.PrettyPrinter.Delaborator.AppMatchState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L346-L346","name":"Lean.PrettyPrinter.Delaborator.AppMatchState.matcherTy","line":346,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState.matcherTy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState.matcherTy\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">AppMatchState</span>.<span class=\"name\">matcherTy</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState\">Lean.PrettyPrinter.Delaborator.AppMatchState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L345-L345","name":"Lean.PrettyPrinter.Delaborator.AppMatchState.info","line":345,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState.info","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState.info\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">AppMatchState</span>.<span class=\"name\">info</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState\">Lean.PrettyPrinter.Delaborator.AppMatchState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.Match.MatcherInfo\">Lean.Meta.MatcherInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L344-L344","name":"Lean.PrettyPrinter.Delaborator.AppMatchState.mk","line":344,"kind":"ctor","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">AppMatchState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(info : <a href=\"./Lean/Meta/Match/MatcherInfo.html#Lean.Meta.Match.MatcherInfo\">Lean.Meta.MatcherInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(matcherTy : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(params : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(motive : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(motiveNamed : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(discrs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(varNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rhss : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(moreArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState\">Lean.PrettyPrinter.Delaborator.AppMatchState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L344-L354","name":"Lean.PrettyPrinter.Delaborator.AppMatchState","line":344,"kind":"structure","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState","doc":"State for `delabAppMatch` and helpers. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.AppMatchState\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">AppMatchState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L335-L341","name":"Lean.PrettyPrinter.Delaborator.withOverApp","line":335,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.withOverApp","doc":"The `withOverApp` combinator allows delaborators to handle \"over-application\" by using the core\napplication delaborator to handle additional arguments.\n\nFor example, suppose `f : {A : Type} â†’ Foo A â†’ A` and we want to implement a delaborator for\napplications `f x` to pretty print as `F[x]`. Because `A` is a type variable we might encounter\na term of the form `@f (A â†’ B) x y`, which has an additional argument `y`.\nWith this combinator one can use an arity-2 delaborator to pretty print this as `F[x] y`.\n\n* `arity`: the expected number of arguments to `f`.\n  The combinator will fail if fewer than this number of arguments are passed,\n  and if more than this number of arguments are passed the arguments are handled using\n  the standard application delaborator.\n* `x`: constructs data corresponding to the main application (`f x` in the example)\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.withOverApp\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">withOverApp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(arity : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L317-L318","name":"Lean.PrettyPrinter.Delaborator.delabApp","line":317,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabApp","doc":"Default delaborator for applications.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabApp\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabApp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L301-L311","name":"Lean.PrettyPrinter.Delaborator.delabAppCore","line":301,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabAppCore","doc":"Delaborates applications. Removes up to `maxArgs` arguments to form\nthe \"head\" of the application and delaborates the head using `delabHead`.\nThe remaining arguments are processed depending on whether heuristics indicate that the application\nshould be delaborated using `@`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabAppCore\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabAppCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(maxArgs : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(delabHead : <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L259-L293","name":"Lean.PrettyPrinter.Delaborator.delabAppImplicitCore","line":259,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabAppImplicitCore","doc":"Delaborates a function application in the standard mode, where implicit arguments are generally not\nincluded.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabAppImplicitCore\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabAppImplicitCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(maxArgs : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(delabHead : <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(paramKinds : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.ParamKind\">Lean.PrettyPrinter.Delaborator.ParamKind</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tagAppFn : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L233-L253","name":"Lean.PrettyPrinter.Delaborator.delabAppExplicitCore","line":233,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabAppExplicitCore","doc":"Delaborates a function application in explicit mode, and ensures the resulting\nhead syntax is wrapped with `@`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabAppExplicitCore\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabAppExplicitCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(maxArgs : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(delabHead : <a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(paramKinds : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.ParamKind\">Lean.PrettyPrinter.Delaborator.ParamKind</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tagAppFn : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L205-L227","name":"Lean.PrettyPrinter.Delaborator.unexpandStructureInstance","line":205,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.unexpandStructureInstance","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.unexpandStructureInstance\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">unexpandStructureInstance</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L196-L203","name":"Lean.PrettyPrinter.Delaborator.unexpandRegularApp","line":196,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.unexpandRegularApp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.unexpandRegularApp\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">unexpandRegularApp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L189-L194","name":"Lean.PrettyPrinter.Delaborator.isRegularApp","line":189,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.isRegularApp","doc":"Returns true if the application is a candidate for unexpanders.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.isRegularApp\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">isRegularApp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(maxArgs : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">Lean.PrettyPrinter.Delaborator.DelabM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L172-L184","name":"Lean.PrettyPrinter.Delaborator.useAppExplicit","line":172,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.useAppExplicit","doc":"Returns true if an application should use explicit mode when delaborating.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.useAppExplicit\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">useAppExplicit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(paramKinds : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.ParamKind\">Lean.PrettyPrinter.Delaborator.ParamKind</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">Lean.PrettyPrinter.Delaborator.DelabM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L164-L167","name":"Lean.PrettyPrinter.Delaborator.shouldShowMotive","line":164,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.shouldShowMotive","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.shouldShowMotive\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">shouldShowMotive</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(motive : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(opts : <a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L141-L162","name":"Lean.PrettyPrinter.Delaborator.getParamKinds","line":141,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.getParamKinds","doc":"Given a function `f` supplied with arguments `args`, returns an array whose n-th element\nis set to the kind of the n-th argument's associated parameter.\nWe do not assume the expression `mkAppN f args` is sensical,\nand this function captures errors (except for panics) and returns the empty array.\n\nThe returned array might be longer than the number of arguments.\nIt gives parameter kinds for the fully-applied function.\nNote: the `defVal` expressions are only guaranteed to be valid for parameters associated to the supplied arguments;\nafter this, they might refer to temporary fvars.\n\nThis function properly handles \"overapplied\" functions.\nFor example, while `id` takes one explicit argument, it can take more than one explicit\nargument when its arguments are specialized to function types, like in `id id 2`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.getParamKinds\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">getParamKinds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(args : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.ParamKind\">Lean.PrettyPrinter.Delaborator.ParamKind</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L123-L124","name":"Lean.PrettyPrinter.Delaborator.ParamKind.isRegularExplicit","line":123,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.ParamKind.isRegularExplicit","doc":"Returns true if the parameter is an explicit parameter that has neither a default value nor a tactic.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.ParamKind.isRegularExplicit\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">ParamKind</span>.<span class=\"name\">isRegularExplicit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(param : <a href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.ParamKind\">Lean.PrettyPrinter.Delaborator.ParamKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L118-L118","name":"Lean.PrettyPrinter.Delaborator.ParamKind.isAutoParam","line":118,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.ParamKind.isAutoParam","doc":"Whether the parameter is an autoparam (i.e., whether it uses a tactic for the default value). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.ParamKind.isAutoParam\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">ParamKind</span>.<span class=\"name\">isAutoParam</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.ParamKind\">Lean.PrettyPrinter.Delaborator.ParamKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L116-L116","name":"Lean.PrettyPrinter.Delaborator.ParamKind.defVal","line":116,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.ParamKind.defVal","doc":"The default value for the parameter, if the parameter has a default value. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.ParamKind.defVal\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">ParamKind</span>.<span class=\"name\">defVal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.ParamKind\">Lean.PrettyPrinter.Delaborator.ParamKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L114-L114","name":"Lean.PrettyPrinter.Delaborator.ParamKind.bInfo","line":114,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.ParamKind.bInfo","doc":"Binder info for the parameter. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.ParamKind.bInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">ParamKind</span>.<span class=\"name\">bInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.ParamKind\">Lean.PrettyPrinter.Delaborator.ParamKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.BinderInfo\">Lean.BinderInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L112-L112","name":"Lean.PrettyPrinter.Delaborator.ParamKind.name","line":112,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.ParamKind.name","doc":"Binder name for the parameter. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.ParamKind.name\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">ParamKind</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.ParamKind\">Lean.PrettyPrinter.Delaborator.ParamKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L110-L110","name":"Lean.PrettyPrinter.Delaborator.ParamKind.mk","line":110,"kind":"ctor","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.ParamKind.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.ParamKind.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">ParamKind</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(bInfo : <a href=\"./Lean/Expr.html#Lean.BinderInfo\">Lean.BinderInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(defVal : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(isAutoParam : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.ParamKind\">Lean.PrettyPrinter.Delaborator.ParamKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L110-L118","name":"Lean.PrettyPrinter.Delaborator.ParamKind","line":110,"kind":"structure","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.ParamKind","doc":"A structure that records details of a function parameter.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.ParamKind\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">ParamKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L101-L105","name":"Lean.PrettyPrinter.Delaborator.delabAppFn","line":101,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabAppFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabAppFn\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabAppFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L98-L99","name":"Lean.PrettyPrinter.Delaborator.withMDatasOptions","line":98,"kind":"opaque","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.withMDatasOptions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.withMDatasOptions\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">withMDatasOptions</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Î± : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Î±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">Lean.PrettyPrinter.Delaborator.DelabM</a> <span class=\"fn\">Î±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">Lean.PrettyPrinter.Delaborator.DelabM</a> <span class=\"fn\">Î±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L86-L96","name":"Lean.PrettyPrinter.Delaborator.withMDataOptions","line":86,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.withMDataOptions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.withMDataOptions\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">withMDataOptions</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Î± : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Î±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">Lean.PrettyPrinter.Delaborator.DelabM</a> <span class=\"fn\">Î±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">Lean.PrettyPrinter.Delaborator.DelabM</a> <span class=\"fn\">Î±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L63-L84","name":"Lean.PrettyPrinter.Delaborator.delabConst","line":63,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabConst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabConst\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabConst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L52-L59","name":"Lean.PrettyPrinter.Delaborator.delabSort","line":52,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabSort","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabSort\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabSort</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L42-L49","name":"Lean.PrettyPrinter.Delaborator.delabMVar","line":42,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabMVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabMVar\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabMVar</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L37-L39","name":"Lean.PrettyPrinter.Delaborator.delabBVar","line":37,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabBVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabBVar\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabBVar</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L26-L33","name":"Lean.PrettyPrinter.Delaborator.delabFVar","line":26,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabFVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.delabFVar\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">delabFVar</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L21-L23","name":"Lean.PrettyPrinter.Delaborator.unfoldMDatas","line":21,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.unfoldMDatas","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.unfoldMDatas\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">unfoldMDatas</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> â†’ <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/PrettyPrinter/Delaborator/Builtins.lean#L18-L19","name":"Lean.PrettyPrinter.Delaborator.maybeAddBlockImplicit","line":18,"kind":"def","docLink":"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.maybeAddBlockImplicit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/PrettyPrinter/Delaborator/Builtins.html#Lean.PrettyPrinter.Delaborator.maybeAddBlockImplicit\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Delaborator</span>.<span class=\"name\">maybeAddBlockImplicit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ident : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.DelabM\">Lean.PrettyPrinter.Delaborator.DelabM</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"}]}
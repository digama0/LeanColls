{"name":"Lean.Parser.Command","instances":[],"imports":["Init","Lean.Parser.Term","Lean.Parser.Do"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L318-L319","name":"Lean.Parser.Tactic.set_option","line":318,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Tactic.set_option","doc":"`set_option opt val in tacs` (the tactic) acts like `set_option opt val` at the command level,\nbut it sets the option only within the tactics `tacs`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Tactic.set_option\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">set_option</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L313-L314","name":"Lean.Parser.Tactic.open","line":313,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Tactic.open","doc":"`open Foo in tacs` (the tactic) acts like `open Foo` at command level,\nbut it opens a namespace only within the tactics `tacs`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Tactic.open\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">open</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L306-L307","name":"Lean.Parser.Term.set_option","line":306,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Term.set_option","doc":"`set_option opt val in e` is like `set_option opt val` but scoped to a single term.\nIt sets the option `opt` to the value `val` in the term `e`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Term.set_option\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Term</span>.<span class=\"name\">set_option</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L299-L300","name":"Lean.Parser.Term.open","line":299,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Term.open","doc":"`open Foo in e` is like `open Foo` but scoped to a single term.\nIt makes the given namespaces available in the term `e`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Term.open\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Term</span>.<span class=\"name\">open</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L280-L280","name":"Lean.Parser.Command.declModifiersT","line":280,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.declModifiersT","doc":"`declModifiers` is the collection of modifiers on a declaration:\n* a doc comment `/-- ... -/`\n* a list of attributes `@[attr1, attr2]`\n* a visibility specifier, `private` or `protected`\n* `noncomputable`\n* `unsafe`\n* `partial` or `nonrec`\n\nAll modifiers are optional, and have to come in the listed order.\n\n`nestedDeclModifiers` is the same as `declModifiers`, but attributes are printed\non the same line as the declaration. It is used for declarations nested inside other syntax,\nsuch as inductive constructors, structure projections, and `let rec` / `where` definitions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.declModifiersT\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">declModifiersT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L278-L278","name":"Lean.Parser.Command.declModifiersF","line":278,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.declModifiersF","doc":"`declModifiers` is the collection of modifiers on a declaration:\n* a doc comment `/-- ... -/`\n* a list of attributes `@[attr1, attr2]`\n* a visibility specifier, `private` or `protected`\n* `noncomputable`\n* `unsafe`\n* `partial` or `nonrec`\n\nAll modifiers are optional, and have to come in the listed order.\n\n`nestedDeclModifiers` is the same as `declModifiers`, but attributes are printed\non the same line as the declaration. It is used for declarations nested inside other syntax,\nsuch as inductive constructors, structure projections, and `let rec` / `where` definitions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.declModifiersF\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">declModifiersF</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L272-L272","name":"Lean.Parser.Command.eoi","line":272,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.eoi","doc":"No-op parser used as syntax kind for attaching remaining whitespace to at the end of the input. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.eoi\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">eoi</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L268-L269","name":"Lean.Parser.Command.genInjectiveTheorems","line":268,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.genInjectiveTheorems","doc":"This is an auxiliary command for generation constructor injectivity theorems for\ninductive types defined at `Prelude.lean`.\nIt is meant for bootstrapping purposes only. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.genInjectiveTheorems\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">genInjectiveTheorems</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L261-L262","name":"Lean.Parser.Command.addDocString","line":261,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.addDocString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.addDocString\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">addDocString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L258-L259","name":"Lean.Parser.Command.in","line":258,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.in","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.in\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">in</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.TrailingParser\">Lean.Parser.TrailingParser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L254-L256","name":"Lean.Parser.Command.initialize","line":254,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.initialize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.initialize\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">initialize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L252-L253","name":"Lean.Parser.Command.initializeKeyword","line":252,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.initializeKeyword","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.initializeKeyword\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">initializeKeyword</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L249-L251","name":"Lean.Parser.Command.mutual","line":249,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.mutual","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.mutual\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">mutual</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L246-L247","name":"Lean.Parser.Command.open","line":246,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.open","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.open\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">open</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L243-L245","name":"Lean.Parser.Command.openDecl","line":243,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.openDecl","doc":"`openDecl` is the body of an `open` declaration (see `open`) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.openDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">openDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L240-L241","name":"Lean.Parser.Command.openScoped","line":240,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.openScoped","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.openScoped\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">openScoped</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L238-L239","name":"Lean.Parser.Command.openSimple","line":238,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.openSimple","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.openSimple\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">openSimple</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L236-L237","name":"Lean.Parser.Command.openOnly","line":236,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.openOnly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.openOnly\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">openOnly</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L234-L235","name":"Lean.Parser.Command.openRenaming","line":234,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.openRenaming","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.openRenaming\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">openRenaming</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L232-L233","name":"Lean.Parser.Command.openRenamingItem","line":232,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.openRenamingItem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.openRenamingItem\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">openRenamingItem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L230-L231","name":"Lean.Parser.Command.openHiding","line":230,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.openHiding","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.openHiding\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">openHiding</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L228-L229","name":"Lean.Parser.Command.import","line":228,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.import","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.import\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">import</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L226-L227","name":"Lean.Parser.Command.export","line":226,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.export","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.export\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">export</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L222-L225","name":"Lean.Parser.Command.attribute","line":222,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.attribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.attribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">attribute</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L220-L221","name":"Lean.Parser.Command.eraseAttr","line":220,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.eraseAttr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.eraseAttr\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">eraseAttr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L218-L219","name":"Lean.Parser.Command.set_option","line":218,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.set_option","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.set_option\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">set_option</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L217-L217","name":"Lean.Parser.Command.optionValue","line":217,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.optionValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.optionValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">optionValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L215-L216","name":"Lean.Parser.Command.init_quot","line":215,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.init_quot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.init_quot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">init_quot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L213-L214","name":"Lean.Parser.Command.printAxioms","line":213,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.printAxioms","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.printAxioms\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">printAxioms</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L211-L212","name":"Lean.Parser.Command.print","line":211,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.print","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.print\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">print</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L209-L210","name":"Lean.Parser.Command.exit","line":209,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.exit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.exit\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">exit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L207-L208","name":"Lean.Parser.Command.synth","line":207,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.synth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.synth\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">synth</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L205-L206","name":"Lean.Parser.Command.eval","line":205,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.eval","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.eval\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">eval</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L203-L204","name":"Lean.Parser.Command.reduce","line":203,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.reduce","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.reduce\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">reduce</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L201-L202","name":"Lean.Parser.Command.check_failure","line":201,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.check_failure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.check_failure\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">check_failure</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L199-L200","name":"Lean.Parser.Command.check","line":199,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.check","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.check\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">check</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L197-L198","name":"Lean.Parser.Command.universe","line":197,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.universe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.universe\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">universe</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L195-L196","name":"Lean.Parser.Command.variable","line":195,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.variable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.variable\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">variable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L193-L194","name":"Lean.Parser.Command.end","line":193,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.end","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.end\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">end</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L191-L192","name":"Lean.Parser.Command.namespace","line":191,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.namespace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.namespace\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">namespace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L189-L190","name":"Lean.Parser.Command.section","line":189,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.section","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.section\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">section</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L187-L188","name":"Lean.Parser.Command.noncomputableSection","line":187,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.noncomputableSection","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.noncomputableSection\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">noncomputableSection</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L185-L186","name":"Lean.Parser.Command.deriving","line":185,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.deriving","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.deriving\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">deriving</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L181-L184","name":"Lean.Parser.Command.declaration","line":181,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.declaration","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.declaration\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">declaration</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L176-L180","name":"Lean.Parser.Command.structure","line":176,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.structure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.structure\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">structure</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L174-L175","name":"Lean.Parser.Command.extends","line":174,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.extends","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.extends\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">extends</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L172-L173","name":"Lean.Parser.Command.classTk","line":172,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.classTk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.classTk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">classTk</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L170-L171","name":"Lean.Parser.Command.structureTk","line":170,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.structureTk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.structureTk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">structureTk</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L168-L169","name":"Lean.Parser.Command.structCtor","line":168,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.structCtor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.structCtor\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">structCtor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L163-L167","name":"Lean.Parser.Command.structFields","line":163,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.structFields","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.structFields\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">structFields</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L160-L162","name":"Lean.Parser.Command.structSimpleBinder","line":160,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.structSimpleBinder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.structSimpleBinder\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">structSimpleBinder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L158-L159","name":"Lean.Parser.Command.structInstBinder","line":158,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.structInstBinder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.structInstBinder\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">structInstBinder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L156-L157","name":"Lean.Parser.Command.structImplicitBinder","line":156,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.structImplicitBinder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.structImplicitBinder\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">structImplicitBinder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L152-L155","name":"Lean.Parser.Command.structExplicitBinder","line":152,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.structExplicitBinder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.structExplicitBinder\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">structExplicitBinder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L148-L151","name":"Lean.Parser.Command.classInductive","line":148,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.classInductive","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.classInductive\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">classInductive</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L145-L147","name":"Lean.Parser.Command.inductive","line":145,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.inductive","doc":"In Lean, every concrete type other than the universes\nand every type constructor other than dependent arrows\nis an instance of a general family of type constructions known as inductive types.\nIt is remarkable that it is possible to construct a substantial edifice of mathematics\nbased on nothing more than the type universes, dependent arrow types, and inductive types;\neverything else follows from those.\nIntuitively, an inductive type is built up from a specified list of constructor.\nFor example, `List α` is the list of elements of type `α`, and is defined as follows:\n```\ninductive List (α : Type u) where\n| nil\n| cons (head : α) (tail : List α)\n```\nA list of elements of type `α` is either the empty list, `nil`,\nor an element `head : α` followed by a list `tail : List α`.\nFor more information about [inductive types](https://lean-lang.org/theorem_proving_in_lean4/inductive_types.html).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.inductive\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">inductive</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L125-L126","name":"Lean.Parser.Command.computedFields","line":125,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.computedFields","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.computedFields\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">computedFields</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L123-L124","name":"Lean.Parser.Command.computedField","line":123,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.computedField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.computedField\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">computedField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L121-L122","name":"Lean.Parser.Command.optDeriving","line":121,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.optDeriving","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.optDeriving\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">optDeriving</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L120-L120","name":"Lean.Parser.Command.derivingClasses","line":120,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.derivingClasses","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.derivingClasses\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">derivingClasses</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L117-L119","name":"Lean.Parser.Command.ctor","line":117,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.ctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.ctor\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">ctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L115-L116","name":"Lean.Parser.Command.example","line":115,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.example","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.example\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">example</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L112-L113","name":"Lean.Parser.Command.axiom","line":112,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.axiom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.axiom\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">axiom</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L109-L111","name":"Lean.Parser.Command.instance","line":109,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.instance","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.instance\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">instance</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L105-L106","name":"Lean.Parser.Command.opaque","line":105,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.opaque","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.opaque\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">opaque</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L103-L104","name":"Lean.Parser.Command.theorem","line":103,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.theorem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.theorem\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">theorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L101-L102","name":"Lean.Parser.Command.def","line":101,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.def\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">def</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L99-L100","name":"Lean.Parser.Command.optDefDeriving","line":99,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.optDefDeriving","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.optDefDeriving\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">optDefDeriving</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L97-L98","name":"Lean.Parser.Command.abbrev","line":97,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.abbrev","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.abbrev\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">abbrev</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L91-L96","name":"Lean.Parser.Command.declVal","line":91,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.declVal","doc":"`declVal` matches the right-hand side of a declaration, one of:\n* `:= expr` (a \"simple declaration\")\n* a sequence of `| pat => expr` (a declaration by equations), shorthand for a `match`\n* `where` and then a sequence of `field := value` initializers, shorthand for a structure constructor\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.declVal\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">declVal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L83-L85","name":"Lean.Parser.Command.whereStructInst","line":83,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.whereStructInst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.whereStructInst\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">whereStructInst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L81-L82","name":"Lean.Parser.Command.whereStructField","line":81,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.whereStructField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.whereStructField\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">whereStructField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L79-L80","name":"Lean.Parser.Command.declValEqns","line":79,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.declValEqns","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.declValEqns\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">declValEqns</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L77-L78","name":"Lean.Parser.Command.declValSimple","line":77,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.declValSimple","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.declValSimple\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">declValSimple</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L75-L76","name":"Lean.Parser.Command.optDeclSig","line":75,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.optDeclSig","doc":"`optDeclSig` matches the signature of a declaration with optional type: a list of binders and then possibly `: type` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.optDeclSig\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">optDeclSig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L72-L73","name":"Lean.Parser.Command.declSig","line":72,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.declSig","doc":"`declSig` matches the signature of a declaration with required type: a list of binders and then `: type` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.declSig\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">declSig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L69-L70","name":"Lean.Parser.Command.declId","line":69,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.declId","doc":"`declId` matches `foo` or `foo.{u,v}`: an identifier possibly followed by a list of universe names "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.declId\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">declId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L61-L67","name":"Lean.Parser.Command.declModifiers","line":61,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.declModifiers","doc":"`declModifiers` is the collection of modifiers on a declaration:\n* a doc comment `/-- ... -/`\n* a list of attributes `@[attr1, attr2]`\n* a visibility specifier, `private` or `protected`\n* `noncomputable`\n* `unsafe`\n* `partial` or `nonrec`\n\nAll modifiers are optional, and have to come in the listed order.\n\n`nestedDeclModifiers` is the same as `declModifiers`, but attributes are printed\non the same line as the declaration. It is used for declarations nested inside other syntax,\nsuch as inductive constructors, structure projections, and `let rec` / `where` definitions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.declModifiers\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">declModifiers</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(inline : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L46-L46","name":"Lean.Parser.Command.nonrec","line":46,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.nonrec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.nonrec\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">nonrec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L45-L45","name":"Lean.Parser.Command.partial","line":45,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.partial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.partial\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">partial</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L44-L44","name":"Lean.Parser.Command.unsafe","line":44,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.unsafe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.unsafe\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">unsafe</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L43-L43","name":"Lean.Parser.Command.noncomputable","line":43,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.noncomputable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.noncomputable\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">noncomputable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L42-L42","name":"Lean.Parser.Command.visibility","line":42,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.visibility","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.visibility\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">visibility</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L41-L41","name":"Lean.Parser.Command.protected","line":41,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.protected","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.protected\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">protected</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L40-L40","name":"Lean.Parser.Command.private","line":40,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.private","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.private\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">private</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L38-L38","name":"Lean.Parser.Command.optNamedPrio","line":38,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.optNamedPrio","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.optNamedPrio\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">optNamedPrio</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L36-L37","name":"Lean.Parser.Command.namedPrio","line":36,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.namedPrio","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.namedPrio\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">namedPrio</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L33-L34","name":"Lean.Parser.Command.moduleDoc","line":33,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.moduleDoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.moduleDoc\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">moduleDoc</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L28-L29","name":"Lean.Parser.Command.quot","line":28,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Command.quot","doc":"Syntax quotation for (sequences of) commands.\nThe identical syntax for term quotations takes priority,\nso ambiguous quotations like `` `($x $y) `` will be parsed as an application,\nnot two commands. Use `` `($x:command $y:command) `` instead.\nMultiple commands will be put in a `` `null `` node,\nbut a single command will not (so that you can directly\nmatch against a quotation in a command kind's elaborator). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Command.quot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">quot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L15-L16","name":"Lean.Parser.Term.precheckedQuot","line":15,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Term.precheckedQuot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Term.precheckedQuot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Term</span>.<span class=\"name\">precheckedQuot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/a5bc9013ab13f7b186cf154d396036b1d7c23370/src/Lean/Parser/Command.lean#L13-L14","name":"Lean.Parser.Term.quot","line":13,"kind":"def","docLink":"./Lean/Parser/Command.html#Lean.Parser.Term.quot","doc":"Syntax quotation for terms. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Command.html#Lean.Parser.Term.quot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Term</span>.<span class=\"name\">quot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"}]}
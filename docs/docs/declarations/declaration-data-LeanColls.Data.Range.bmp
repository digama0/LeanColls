{"name":"LeanColls.Data.Range","instances":[{"typeNames":["Std.Range","LeanColls.Range"],"name":"LeanColls.Range.instCoeRangeRange","className":"Coe"},{"typeNames":["LeanColls.Range","Std.Range"],"name":"LeanColls.Range.instCoeHeadRangeRange","className":"CoeHead"},{"typeNames":["Nat","LeanColls.Range"],"name":"LeanColls.Range.instMembershipNatRange","className":"Membership"},{"typeNames":["LeanColls.Range"],"name":"LeanColls.Range.instSizeRange","className":"LeanColls.Size"},{"typeNames":["LeanColls.Range","Nat"],"name":"LeanColls.Range.instFoldRangeNat","className":"LeanColls.Fold"}],"imports":["Init","Std.Data.Range.Lemmas","Mathlib.Tactic.Linarith","Mathlib.Data.Nat.Basic","LeanColls.Classes.Ops","LeanColls.MathlibUpstream"],"declarations":[{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L191-L196","name":"LeanColls.Range.fold_def","line":191,"kind":"theorem","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.fold_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.fold_def\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">fold_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{init : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./LeanColls/Classes/Ops.html#LeanColls.Fold.fold\">LeanColls.fold</a> <span class=\"fn\">r</span> <span class=\"fn\">f</span> <span class=\"fn\">init</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Std/Data/Fin/Basic.html#Fin.foldl\">Fin.foldl</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Data/Range.html#LeanColls.Range.size\">LeanColls.Range.size</a> <span class=\"fn\">r</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">acc</span> : <span class=\"fn\">β</span>) (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Data/Range.html#LeanColls.Range.size\">LeanColls.Range.size</a> <span class=\"fn\">r</span></span>)</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">acc</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Data/Range.html#LeanColls.Range.get\">LeanColls.Range.get</a> <span class=\"fn\">r</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span> <span class=\"fn\">init</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L175-L188","name":"LeanColls.Range.foldl'.aux","line":175,"kind":"def","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.foldl'.aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.foldl'.aux\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">foldl'</span>.<span class=\"name\">aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">r</span></span> → <span class=\"fn\">α</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hi : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">r</span>.stop</span></span> → <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">r</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(acc : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L172-L189","name":"LeanColls.Range.foldl'","line":172,"kind":"def","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.foldl'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.foldl'\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">foldl'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">r</span></span> → <span class=\"fn\">α</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(init : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L169-L170","name":"LeanColls.Range.instFoldRangeNat","line":169,"kind":"instance","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.instFoldRangeNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.instFoldRangeNat\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">instFoldRangeNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/Ops.html#LeanColls.Fold\">LeanColls.Fold</a> <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L153-L166","name":"LeanColls.Range.foldl.aux","line":153,"kind":"def","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.foldl.aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.foldl.aux\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">foldl</span>.<span class=\"name\">aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hi : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">r</span>.stop</span></span> → <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">r</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(acc : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L150-L167","name":"LeanColls.Range.foldl","line":150,"kind":"def","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.foldl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.foldl\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">foldl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(init : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L138-L147","name":"LeanColls.Range.mem_iff_exists_get","line":138,"kind":"theorem","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.mem_iff_exists_get","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.mem_iff_exists_get\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">mem_iff_exists_get</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Data/Range.html#LeanColls.Range.size\">LeanColls.Range.size</a> <span class=\"fn\">r</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./LeanColls/Data/Range.html#LeanColls.Range.get\">LeanColls.Range.get</a> <span class=\"fn\">r</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L133-L136","name":"LeanColls.Range.get_mem","line":133,"kind":"theorem","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.get_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.get_mem\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">get_mem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Data/Range.html#LeanColls.Range.size\">LeanColls.Range.size</a> <span class=\"fn\">r</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./LeanColls/Data/Range.html#LeanColls.Range.get\">LeanColls.Range.get</a> <span class=\"fn\">r</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L131-L131","name":"LeanColls.Range.get","line":131,"kind":"def","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.get","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.get\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">get</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Data/Range.html#LeanColls.Range.size\">LeanColls.Range.size</a> <span class=\"fn\">r</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L115-L128","name":"LeanColls.Range.size_eq_zero_iff_isEmpty","line":115,"kind":"theorem","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.size_eq_zero_iff_isEmpty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.size_eq_zero_iff_isEmpty\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">size_eq_zero_iff_isEmpty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./LeanColls/Data/Range.html#LeanColls.Range.size\">LeanColls.Range.size</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./LeanColls/Data/Range.html#LeanColls.Range.isEmpty\">LeanColls.Range.isEmpty</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L112-L113","name":"LeanColls.Range.isEmpty","line":112,"kind":"def","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.isEmpty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.isEmpty\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">isEmpty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L106-L110","name":"LeanColls.Range.empty","line":106,"kind":"def","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.empty\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(start : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L93-L103","name":"LeanColls.Range.nth_size_lt","line":93,"kind":"theorem","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.nth_size_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.nth_size_lt\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">nth_size_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./LeanColls/Data/Range.html#LeanColls.Range.nth\">LeanColls.Range.nth</a> <span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Data/Range.html#LeanColls.Range.size\">LeanColls.Range.size</a> <span class=\"fn\">r</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.stop</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">r</span>.step</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L89-L91","name":"LeanColls.Range.nth_size_eq_stop","line":89,"kind":"theorem","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.nth_size_eq_stop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.nth_size_eq_stop\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">nth_size_eq_stop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.step</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./LeanColls/Data/Range.html#LeanColls.Range.nth\">LeanColls.Range.nth</a> <span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Data/Range.html#LeanColls.Range.size\">LeanColls.Range.size</a> <span class=\"fn\">r</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">r</span>.stop</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L85-L87","name":"LeanColls.Range.nth_mem_iff_lt_size","line":85,"kind":"theorem","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.nth_mem_iff_lt_size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.nth_mem_iff_lt_size\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">nth_mem_iff_lt_size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./LeanColls/Data/Range.html#LeanColls.Range.nth\">LeanColls.Range.nth</a> <span class=\"fn\">r</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./LeanColls/Data/Range.html#LeanColls.Range.size\">LeanColls.Range.size</a> <span class=\"fn\">r</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L78-L83","name":"LeanColls.Range.nth_lt_stop_iff_lt_size","line":78,"kind":"theorem","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.nth_lt_stop_iff_lt_size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.nth_lt_stop_iff_lt_size\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">nth_lt_stop_iff_lt_size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./LeanColls/Data/Range.html#LeanColls.Range.nth\">LeanColls.Range.nth</a> <span class=\"fn\">r</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">r</span>.stop</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./LeanColls/Data/Range.html#LeanColls.Range.size\">LeanColls.Range.size</a> <span class=\"fn\">r</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L75-L76","name":"LeanColls.Range.instSizeRange","line":75,"kind":"instance","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.instSizeRange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.instSizeRange\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">instSizeRange</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/Ops.html#LeanColls.Size\">LeanColls.Size</a> <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L72-L73","name":"LeanColls.Range.size","line":72,"kind":"def","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.size\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L65-L70","name":"LeanColls.Range.nth_ofNth","line":65,"kind":"theorem","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.nth_ofNth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.nth_ofNth\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">nth_ofNth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./LeanColls/Data/Range.html#LeanColls.Range.nth\">LeanColls.Range.nth</a> <span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Data/Range.html#LeanColls.Range.ofNth\">LeanColls.Range.ofNth</a> <span class=\"fn\">r</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L61-L63","name":"LeanColls.Range.ofNth_nth","line":61,"kind":"theorem","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.ofNth_nth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.ofNth_nth\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">ofNth_nth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./LeanColls/Data/Range.html#LeanColls.Range.ofNth\">LeanColls.Range.ofNth</a> <span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Data/Range.html#LeanColls.Range.nth\">LeanColls.Range.nth</a> <span class=\"fn\">r</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L58-L59","name":"LeanColls.Range.ofNth","line":58,"kind":"def","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.ofNth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.ofNth\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">ofNth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L55-L56","name":"LeanColls.Range.nth_sub_start","line":55,"kind":"theorem","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.nth_sub_start","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.nth_sub_start\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">nth_sub_start</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.step</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./LeanColls/Data/Range.html#LeanColls.Range.nth\">LeanColls.Range.nth</a> <span class=\"fn\">r</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">r</span>.start</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L52-L53","name":"LeanColls.Range.nth_ge_start","line":52,"kind":"theorem","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.nth_ge_start","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.nth_ge_start\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">nth_ge_start</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./LeanColls/Data/Range.html#LeanColls.Range.nth\">LeanColls.Range.nth</a> <span class=\"fn\">r</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\"><span class=\"fn\">r</span>.start</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L49-L50","name":"LeanColls.Range.nth","line":49,"kind":"def","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.nth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.nth\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">nth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L45-L47","name":"LeanColls.Range.mem_def","line":45,"kind":"theorem","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.mem_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.mem_def\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">mem_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.start</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">r</span>.stop</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.step</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">r</span>.start</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L42-L43","name":"LeanColls.Range.instMembershipNatRange","line":42,"kind":"instance","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.instMembershipNatRange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.instMembershipNatRange\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">instMembershipNatRange</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Membership\">Membership</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L39-L40","name":"LeanColls.Range.contains","line":39,"kind":"def","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.contains","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.contains\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">contains</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L35-L36","name":"LeanColls.Range.instCoeHeadRangeRange","line":35,"kind":"instance","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.instCoeHeadRangeRange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.instCoeHeadRangeRange\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">instCoeHeadRangeRange</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeHead\">CoeHead</a> <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a> <a href=\"./Init/Data/Range.html#Std.Range\">Std.Range</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L32-L33","name":"LeanColls.Range.instCoeRangeRange","line":32,"kind":"instance","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.instCoeRangeRange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.instCoeRangeRange\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">instCoeRangeRange</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Init/Data/Range.html#Std.Range\">Std.Range</a> <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L23-L30","name":"LeanColls.Range.ofStd","line":23,"kind":"def","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.ofStd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.ofStd\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">ofStd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range.html#Std.Range\">Std.Range</a> → <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L17-L17","name":"LeanColls.Range.start_le_stop","line":17,"kind":"def","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.start_le_stop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.start_le_stop\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">start_le_stop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.start</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">self</span>.stop</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L16-L16","name":"LeanColls.Range.step_pos","line":16,"kind":"def","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.step_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.step_pos\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">step_pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.step</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L15-L15","name":"LeanColls.Range.mk","line":15,"kind":"ctor","docLink":"./LeanColls/Data/Range.html#LeanColls.Range.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range.mk\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toRange : <a href=\"./Init/Data/Range.html#Std.Range\">Std.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(step_pos : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toRange</span>.step</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(start_le_stop : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toRange</span>.start</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">toRange</span>.stop</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./LeanColls/Data/Range.html#LeanColls.Range\">LeanColls.Range</a></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Range.lean#L15-L17","name":"LeanColls.Range","line":15,"kind":"structure","docLink":"./LeanColls/Data/Range.html#LeanColls.Range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Range.html#LeanColls.Range\"><span class=\"name\">LeanColls</span>.<span class=\"name\">Range</span></a></span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Init/Data/Range.html#Std.Range\"><span class=\"name\">Std</span>.<span class=\"name\">Range</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}
{"name":"Std.Tactic.Omega.Coeffs.IntList","instances":[],"imports":["Init","Std.Tactic.Omega.IntList","Std.Data.List.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L107-L108","name":"Std.Tactic.Omega.Coeffs.dot_neg_left","line":107,"kind":"theorem","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot_neg_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot_neg_left\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">dot_neg_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(xs : <a href=\"./Std/Tactic/Omega/IntList.html#IntList\">IntList</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ys : <a href=\"./Std/Tactic/Omega/IntList.html#IntList\">IntList</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot\">Std.Tactic.Omega.Coeffs.dot</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">xs</span></span>)</span> <span class=\"fn\">ys</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot\">Std.Tactic.Omega.Coeffs.dot</a> <span class=\"fn\">xs</span> <span class=\"fn\">ys</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L106-L106","name":"Std.Tactic.Omega.Coeffs.get_nil","line":106,"kind":"theorem","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.get_nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.get_nil\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">get_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.get\">Std.Tactic.Omega.Coeffs.get</a> <span class=\"fn\">[]</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L105-L105","name":"Std.Tactic.Omega.Coeffs.dot_nil_right","line":105,"kind":"theorem","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot_nil_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot_nil_right\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">dot_nil_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot\">Std.Tactic.Omega.Coeffs.dot</a> <span class=\"fn\">xs</span> <span class=\"fn\">[]</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L102-L103","name":"Std.Tactic.Omega.Coeffs.map_length","line":102,"kind":"theorem","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.map_length","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.map_length\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">map_length</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a> → <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.length\">Std.Tactic.Omega.Coeffs.length</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.map\">Std.Tactic.Omega.Coeffs.map</a> <span class=\"fn\">f</span> <span class=\"fn\">xs</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.length\">Std.Tactic.Omega.Coeffs.length</a> <span class=\"fn\">xs</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L100-L101","name":"Std.Tactic.Omega.Coeffs.gcd_dvd_dot_left","line":100,"kind":"theorem","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.gcd_dvd_dot_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.gcd_dvd_dot_left\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">gcd_dvd_dot_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ys : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.gcd\">Std.Tactic.Omega.Coeffs.gcd</a> <span class=\"fn\">xs</span></span>)</span></span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot\">Std.Tactic.Omega.Coeffs.dot</a> <span class=\"fn\">xs</span> <span class=\"fn\">ys</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L97-L99","name":"Std.Tactic.Omega.Coeffs.combo_eq_smul_add_smul","line":97,"kind":"theorem","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.combo_eq_smul_add_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.combo_eq_smul_add_smul\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">combo_eq_smul_add_smul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ys : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.combo\">Std.Tactic.Omega.Coeffs.combo</a> <span class=\"fn\">a</span> <span class=\"fn\">xs</span> <span class=\"fn\">b</span> <span class=\"fn\">ys</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">xs</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">ys</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L95-L96","name":"Std.Tactic.Omega.Coeffs.sub_eq_add_neg","line":95,"kind":"theorem","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.sub_eq_add_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.sub_eq_add_neg\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">sub_eq_add_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ys : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">xs</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">ys</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">xs</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">ys</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L93-L94","name":"Std.Tactic.Omega.Coeffs.dot_distrib_left","line":93,"kind":"theorem","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot_distrib_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot_distrib_left\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">dot_distrib_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ys : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(zs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot\">Std.Tactic.Omega.Coeffs.dot</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">xs</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">ys</span></span>)</span> <span class=\"fn\">zs</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot\">Std.Tactic.Omega.Coeffs.dot</a> <span class=\"fn\">xs</span> <span class=\"fn\">zs</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot\">Std.Tactic.Omega.Coeffs.dot</a> <span class=\"fn\">ys</span> <span class=\"fn\">zs</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L91-L92","name":"Std.Tactic.Omega.Coeffs.dot_smul_left","line":91,"kind":"theorem","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot_smul_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot_smul_left\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">dot_smul_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ys : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot\">Std.Tactic.Omega.Coeffs.dot</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">xs</span></span>)</span> <span class=\"fn\">ys</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot\">Std.Tactic.Omega.Coeffs.dot</a> <span class=\"fn\">xs</span> <span class=\"fn\">ys</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L88-L90","name":"Std.Tactic.Omega.Coeffs.dot_sdiv_left","line":88,"kind":"theorem","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot_sdiv_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot_sdiv_left\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">dot_sdiv_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ys : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.gcd\">Std.Tactic.Omega.Coeffs.gcd</a> <span class=\"fn\">xs</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot\">Std.Tactic.Omega.Coeffs.dot</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.sdiv\">Std.Tactic.Omega.Coeffs.sdiv</a> <span class=\"fn\">xs</span> <span class=\"fn\">d</span></span>)</span> <span class=\"fn\">ys</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot\">Std.Tactic.Omega.Coeffs.dot</a> <span class=\"fn\">xs</span> <span class=\"fn\">ys</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">d</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L85-L87","name":"Std.Tactic.Omega.Coeffs.dot_set_left","line":85,"kind":"theorem","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot_set_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot_set_left\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">dot_set_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ys : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot\">Std.Tactic.Omega.Coeffs.dot</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.set\">Std.Tactic.Omega.Coeffs.set</a> <span class=\"fn\">xs</span> <span class=\"fn\">i</span> <span class=\"fn\">z</span></span>)</span> <span class=\"fn\">ys</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot\">Std.Tactic.Omega.Coeffs.dot</a> <span class=\"fn\">xs</span> <span class=\"fn\">ys</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.get\">Std.Tactic.Omega.Coeffs.get</a> <span class=\"fn\">xs</span> <span class=\"fn\">i</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.get\">Std.Tactic.Omega.Coeffs.get</a> <span class=\"fn\">ys</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L83-L84","name":"Std.Tactic.Omega.Coeffs.get_of_length_le","line":83,"kind":"theorem","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.get_of_length_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.get_of_length_le\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">get_of_length_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.length\">Std.Tactic.Omega.Coeffs.length</a> <span class=\"fn\">xs</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.get\">Std.Tactic.Omega.Coeffs.get</a> <span class=\"fn\">xs</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L80-L81","name":"Std.Tactic.Omega.Coeffs.dvd_bmod_dot_sub_dot_bmod","line":80,"kind":"theorem","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dvd_bmod_dot_sub_dot_bmod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dvd_bmod_dot_sub_dot_bmod\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">dvd_bmod_dot_sub_dot_bmod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ys : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.bmod_dot_sub_dot_bmod\">Std.Tactic.Omega.Coeffs.bmod_dot_sub_dot_bmod</a> <span class=\"fn\">m</span> <span class=\"fn\">xs</span> <span class=\"fn\">ys</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L78-L79","name":"Std.Tactic.Omega.Coeffs.bmod_length","line":78,"kind":"theorem","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.bmod_length","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.bmod_length\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">bmod_length</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.length\">Std.Tactic.Omega.Coeffs.length</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.bmod\">Std.Tactic.Omega.Coeffs.bmod</a> <span class=\"fn\">x</span> <span class=\"fn\">m</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.length\">Std.Tactic.Omega.Coeffs.length</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L76-L77","name":"Std.Tactic.Omega.Coeffs.bmod_dot_sub_dot_bmod","line":76,"kind":"def","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.bmod_dot_sub_dot_bmod","doc":"Shim for `IntList.bmod_dot_sub_dot_bmod`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.bmod_dot_sub_dot_bmod\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">bmod_dot_sub_dot_bmod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L74-L74","name":"Std.Tactic.Omega.Coeffs.bmod","line":74,"kind":"def","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.bmod","doc":"Shim for `IntList.bmod`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.bmod\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">bmod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L69-L70","name":"Std.Tactic.Omega.Coeffs.findIdx?","line":69,"kind":"def","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.findIdx?","doc":"Shim for `.enum.find?`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.findIdx?\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">findIdx?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L67-L67","name":"Std.Tactic.Omega.Coeffs.map","line":67,"kind":"def","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.map","doc":"Shim for `List.map`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.map\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a> → <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L65-L65","name":"Std.Tactic.Omega.Coeffs.leading","line":65,"kind":"def","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.leading","doc":"Shim for `IntList.leading`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.leading\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">leading</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L63-L63","name":"Std.Tactic.Omega.Coeffs.length","line":63,"kind":"def","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.length","doc":"Shim for `List.length`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.length\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">length</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L61-L61","name":"Std.Tactic.Omega.Coeffs.combo","line":61,"kind":"def","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.combo","doc":"Shim for `IntList.combo`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.combo\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">combo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ys : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L59-L59","name":"Std.Tactic.Omega.Coeffs.neg","line":59,"kind":"def","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.neg","doc":"Shim for `IntList.neg`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.neg\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L57-L57","name":"Std.Tactic.Omega.Coeffs.sub","line":57,"kind":"def","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.sub","doc":"Shim for `IntList.sub`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.sub\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ys : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L55-L55","name":"Std.Tactic.Omega.Coeffs.add","line":55,"kind":"def","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.add","doc":"Shim for `IntList.add`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.add\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ys : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L53-L53","name":"Std.Tactic.Omega.Coeffs.dot","line":53,"kind":"def","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot","doc":"Shim for `IntList.dot`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.dot\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">dot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ys : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L51-L51","name":"Std.Tactic.Omega.Coeffs.sdiv","line":51,"kind":"def","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.sdiv","doc":"Shim for `IntList.sdiv`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.sdiv\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">sdiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L49-L49","name":"Std.Tactic.Omega.Coeffs.smul","line":49,"kind":"def","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.smul","doc":"Shim for `IntList.smul`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.smul\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">smul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L47-L47","name":"Std.Tactic.Omega.Coeffs.gcd","line":47,"kind":"def","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.gcd","doc":"Shim for `IntList.gcd`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.gcd\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">gcd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L45-L45","name":"Std.Tactic.Omega.Coeffs.get","line":45,"kind":"def","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.get","doc":"Shim for `IntList.get`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.get\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">get</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L43-L43","name":"Std.Tactic.Omega.Coeffs.set","line":43,"kind":"def","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.set","doc":"Shim for `IntList.set`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.set\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">set</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L41-L41","name":"Std.Tactic.Omega.Coeffs.isZero","line":41,"kind":"def","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.isZero","doc":"Are the coefficients all zero? "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.isZero\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">isZero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L39-L39","name":"Std.Tactic.Omega.Coeffs.ofList","line":39,"kind":"def","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.ofList","doc":"Identity, turning `List Int` into `Coeffs`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.ofList\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">ofList</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(xs : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L37-L37","name":"Std.Tactic.Omega.Coeffs.toList","line":37,"kind":"def","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.toList","doc":"Identity, turning `Coeffs` into `List Int`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs.toList\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span>.<span class=\"name\">toList</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(xs : <a href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\">Std.Tactic.Omega.Coeffs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/a7543d1a6934d52086971f510e482d743fe30cf3/Std/Tactic/Omega/Coeffs/IntList.lean#L32-L32","name":"Std.Tactic.Omega.Coeffs","line":32,"kind":"def","docLink":"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs","doc":"Type synonym for `IntList := List Int`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/Omega/Coeffs/IntList.html#Std.Tactic.Omega.Coeffs\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Omega</span>.<span class=\"name\">Coeffs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}
{"name":"LeanColls.Data.Array","instances":[{"typeNames":["Array"],"name":"Array.instToListArray","className":"LeanColls.ToList"},{"typeNames":["Array"],"name":"Array.instSeqArray","className":"LeanColls.Seq"},{"typeNames":["Array"],"name":"Array.instLawfulSeqArrayInstSeqArray","className":"LeanColls.LawfulSeq"},{"typeNames":["ByteArray","UInt8"],"name":"ByteArray.instToListByteArrayUInt8","className":"LeanColls.ToList"},{"typeNames":["ByteArray","UInt8"],"name":"ByteArray.instFoldByteArrayUInt8","className":"LeanColls.Fold"},{"typeNames":["UInt8","ByteArray"],"name":"ByteArray.instMembershipUInt8ByteArray","className":"Membership"},{"typeNames":["ByteArray","UInt8"],"name":"ByteArray.instSeqByteArrayUInt8","className":"LeanColls.Seq"},{"typeNames":["FloatArray","Float"],"name":"FloatArray.instToListFloatArrayFloat","className":"LeanColls.ToList"},{"typeNames":["FloatArray","Float"],"name":"FloatArray.instFoldFloatArrayFloat","className":"LeanColls.Fold"},{"typeNames":["Float","FloatArray"],"name":"FloatArray.instMembershipFloatFloatArray","className":"Membership"},{"typeNames":["FloatArray"],"name":"FloatArray.instAppendFloatArray","className":"Append"},{"typeNames":["FloatArray","Float"],"name":"FloatArray.instSeqFloatArrayFloat","className":"LeanColls.Seq"}],"imports":["Init","Std.Data.Array.Lemmas","Std.Data.List.Lemmas","Mathlib.Data.Array.Lemmas","LeanColls.Classes.Seq","LeanColls.Data.List","LeanColls.Data.Range","LeanColls.Data.Transformer.FixSize"],"declarations":[{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Array.lean#L203-L212","name":"FloatArray.instSeqFloatArrayFloat","line":203,"kind":"instance","docLink":"./LeanColls/Data/Array.html#FloatArray.instSeqFloatArrayFloat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Array.html#FloatArray.instSeqFloatArrayFloat\"><span class=\"name\">FloatArray</span>.<span class=\"name\">instSeqFloatArrayFloat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/Seq.html#LeanColls.Seq\">LeanColls.Seq</a> <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Array.lean#L196-L200","name":"FloatArray.ofFn.aux","line":196,"kind":"def","docLink":"./LeanColls/Data/Array.html#FloatArray.ofFn.aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Array.html#FloatArray.ofFn.aux\"><span class=\"name\">FloatArray</span>.<span class=\"name\">ofFn</span>.<span class=\"name\">aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(acc : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Array.lean#L194-L201","name":"FloatArray.ofFn","line":194,"kind":"def","docLink":"./LeanColls/Data/Array.html#FloatArray.ofFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Array.html#FloatArray.ofFn\"><span class=\"name\">FloatArray</span>.<span class=\"name\">ofFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <a href=\"./Init/Data/Float.html#Float\">Float</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Array.lean#L191-L192","name":"FloatArray.instAppendFloatArray","line":191,"kind":"instance","docLink":"./LeanColls/Data/Array.html#FloatArray.instAppendFloatArray","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Array.html#FloatArray.instAppendFloatArray\"><span class=\"name\">FloatArray</span>.<span class=\"name\">instAppendFloatArray</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Append\">Append</a> <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Array.lean#L184-L188","name":"FloatArray.append.aux","line":184,"kind":"def","docLink":"./LeanColls/Data/Array.html#FloatArray.append.aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Array.html#FloatArray.append.aux\"><span class=\"name\">FloatArray</span>.<span class=\"name\">append</span>.<span class=\"name\">aux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A2 : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(acc : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Array.lean#L182-L189","name":"FloatArray.append","line":182,"kind":"def","docLink":"./LeanColls/Data/Array.html#FloatArray.append","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Array.html#FloatArray.append\"><span class=\"name\">FloatArray</span>.<span class=\"name\">append</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A1 : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A2 : <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Array.lean#L179-L179","name":"FloatArray.instMembershipFloatFloatArray","line":179,"kind":"instance","docLink":"./LeanColls/Data/Array.html#FloatArray.instMembershipFloatFloatArray","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Array.html#FloatArray.instMembershipFloatFloatArray\"><span class=\"name\">FloatArray</span>.<span class=\"name\">instMembershipFloatFloatArray</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Membership\">Membership</a> <a href=\"./Init/Data/Float.html#Float\">Float</a> <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Array.lean#L175-L177","name":"FloatArray.instFoldFloatArrayFloat","line":175,"kind":"instance","docLink":"./LeanColls/Data/Array.html#FloatArray.instFoldFloatArrayFloat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Array.html#FloatArray.instFoldFloatArrayFloat\"><span class=\"name\">FloatArray</span>.<span class=\"name\">instFoldFloatArrayFloat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/Ops.html#LeanColls.Fold\">LeanColls.Fold</a> <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Array.lean#L172-L173","name":"FloatArray.instToListFloatArrayFloat","line":172,"kind":"instance","docLink":"./LeanColls/Data/Array.html#FloatArray.instToListFloatArrayFloat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Array.html#FloatArray.instToListFloatArrayFloat\"><span class=\"name\">FloatArray</span>.<span class=\"name\">instToListFloatArrayFloat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/Ops.html#LeanColls.ToList\">LeanColls.ToList</a> <a href=\"./Init/Data/FloatArray/Basic.html#FloatArray\">FloatArray</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Array.lean#L158-L165","name":"ByteArray.instSeqByteArrayUInt8","line":158,"kind":"instance","docLink":"./LeanColls/Data/Array.html#ByteArray.instSeqByteArrayUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Array.html#ByteArray.instSeqByteArrayUInt8\"><span class=\"name\">ByteArray</span>.<span class=\"name\">instSeqByteArrayUInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/Seq.html#LeanColls.Seq\">LeanColls.Seq</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Array.lean#L155-L155","name":"ByteArray.instMembershipUInt8ByteArray","line":155,"kind":"instance","docLink":"./LeanColls/Data/Array.html#ByteArray.instMembershipUInt8ByteArray","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Array.html#ByteArray.instMembershipUInt8ByteArray\"><span class=\"name\">ByteArray</span>.<span class=\"name\">instMembershipUInt8ByteArray</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Membership\">Membership</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Array.lean#L151-L153","name":"ByteArray.instFoldByteArrayUInt8","line":151,"kind":"instance","docLink":"./LeanColls/Data/Array.html#ByteArray.instFoldByteArrayUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Array.html#ByteArray.instFoldByteArrayUInt8\"><span class=\"name\">ByteArray</span>.<span class=\"name\">instFoldByteArrayUInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/Ops.html#LeanColls.Fold\">LeanColls.Fold</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Array.lean#L148-L149","name":"ByteArray.instToListByteArrayUInt8","line":148,"kind":"instance","docLink":"./LeanColls/Data/Array.html#ByteArray.instToListByteArrayUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Array.html#ByteArray.instToListByteArrayUInt8\"><span class=\"name\">ByteArray</span>.<span class=\"name\">instToListByteArrayUInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/Ops.html#LeanColls.ToList\">LeanColls.ToList</a> <a href=\"./Init/Data/ByteArray/Basic.html#ByteArray\">ByteArray</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Array.lean#L141-L142","name":"ArrayI","line":141,"kind":"def","docLink":"./LeanColls/Data/Array.html#ArrayI","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Array.html#ArrayI\"><span class=\"name\">ArrayI</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ι : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./LeanColls/Classes/IndexType/Basic.html#LeanColls.IndexType\">LeanColls.IndexType</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v</div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Array.lean#L139-L140","name":"ArrayN","line":139,"kind":"def","docLink":"./LeanColls/Data/Array.html#ArrayN","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Array.html#ArrayN\"><span class=\"name\">ArrayN</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Array.lean#L54-L136","name":"Array.instLawfulSeqArrayInstSeqArray","line":54,"kind":"instance","docLink":"./LeanColls/Data/Array.html#Array.instLawfulSeqArrayInstSeqArray","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Array.html#Array.instLawfulSeqArrayInstSeqArray\"><span class=\"name\">Array</span>.<span class=\"name\">instLawfulSeqArrayInstSeqArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/Seq.html#LeanColls.LawfulSeq\">LeanColls.LawfulSeq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Array.lean#L40-L52","name":"Array.instSeqArray","line":40,"kind":"instance","docLink":"./LeanColls/Data/Array.html#Array.instSeqArray","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Array.html#Array.instSeqArray\"><span class=\"name\">Array</span>.<span class=\"name\">instSeqArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/Seq.html#LeanColls.Seq\">LeanColls.Seq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Array.lean#L37-L38","name":"Array.instToListArray","line":37,"kind":"instance","docLink":"./LeanColls/Data/Array.html#Array.instToListArray","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Array.html#Array.instToListArray\"><span class=\"name\">Array</span>.<span class=\"name\">instToListArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/Ops.html#LeanColls.ToList\">LeanColls.ToList</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Array.lean#L34-L35","name":"Array.ext'_iff","line":34,"kind":"theorem","docLink":"./LeanColls/Data/Array.html#Array.ext'_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Array.html#Array.ext'_iff\"><span class=\"name\">Array</span>.<span class=\"name\">ext'_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">B</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.data</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">B</span>.data</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Array.lean#L29-L32","name":"Array.ext_iff","line":29,"kind":"theorem","docLink":"./LeanColls/Data/Array.html#Array.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Array.html#Array.ext_iff\"><span class=\"name\">Array</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array.size\">Array.size</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array.size\">Array.size</a> <span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">B</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">h1</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array.size\">Array.size</a> <span class=\"fn\">A</span></span></span>) (<span class=\"fn\">h2</span> : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array.size\">Array.size</a> <span class=\"fn\">B</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>[<span class=\"fn\">i</span>]</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">B</span>[<span class=\"fn\">i</span>]</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Array.lean#L22-L27","name":"Array.getSnoc?","line":22,"kind":"def","docLink":"./LeanColls/Data/Array.html#Array.getSnoc?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Array.html#Array.getSnoc?\"><span class=\"name\">Array</span>.<span class=\"name\">getSnoc?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Array.lean#L21-L21","name":"Array.snoc","line":21,"kind":"def","docLink":"./LeanColls/Data/Array.html#Array.snoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Array.html#Array.snoc\"><span class=\"name\">Array</span>.<span class=\"name\">snoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/Array.lean#L19-L19","name":"Array.cons","line":19,"kind":"def","docLink":"./LeanColls/Data/Array.html#Array.cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/Array.html#Array.cons\"><span class=\"name\">Array</span>.<span class=\"name\">cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span></div></div>"}]}
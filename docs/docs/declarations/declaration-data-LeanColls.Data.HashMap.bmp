{"name":"LeanColls.Data.HashMap","instances":[{"typeNames":["Std.HashMap","Prod"],"name":"LeanColls.instFoldHashMapProd","className":"LeanColls.Fold"},{"typeNames":["LeanColls.Map.KeySet"],"name":"LeanColls.instFoldKeySetHashMap","className":"LeanColls.Fold"},{"typeNames":["Std.HashMap"],"name":"LeanColls.instMapHashMap","className":"LeanColls.Map"}],"imports":["Init","LeanColls.Classes.Map","LeanColls.Data.Transformer.View","Std.Data.HashMap"],"declarations":[{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/HashMap.lean#L26-L46","name":"LeanColls.instMapHashMap","line":26,"kind":"instance","docLink":"./LeanColls/Data/HashMap.html#LeanColls.instMapHashMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/HashMap.html#LeanColls.instMapHashMap\"><span class=\"name\">LeanColls</span>.<span class=\"name\">instMapHashMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{κ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{τ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/Map.html#LeanColls.Map\">LeanColls.Map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">LeanColls.HashMap</a> <span class=\"fn\">κ</span> <span class=\"fn\">τ</span></span>)</span> <span class=\"fn\">κ</span> <span class=\"fn\">τ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/HashMap.lean#L22-L24","name":"LeanColls.instFoldKeySetHashMap","line":22,"kind":"instance","docLink":"./LeanColls/Data/HashMap.html#LeanColls.instFoldKeySetHashMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/HashMap.html#LeanColls.instFoldKeySetHashMap\"><span class=\"name\">LeanColls</span>.<span class=\"name\">instFoldKeySetHashMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{κ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{τ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/Ops.html#LeanColls.Fold\">LeanColls.Fold</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./LeanColls/Classes/Map.html#LeanColls.Map.KeySet\">LeanColls.Map.KeySet</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">LeanColls.HashMap</a> <span class=\"fn\">κ</span> <span class=\"fn\">τ</span></span>)</span></span>)</span> <span class=\"fn\">κ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/JamesGallicchio/LeanColls/blob/ae815c0bd089ec48e464487c9ccae3ffea753870/LeanColls/Data/HashMap.lean#L18-L20","name":"LeanColls.instFoldHashMapProd","line":18,"kind":"instance","docLink":"./LeanColls/Data/HashMap.html#LeanColls.instFoldHashMapProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanColls/Data/HashMap.html#LeanColls.instFoldHashMapProd\"><span class=\"name\">LeanColls</span>.<span class=\"name\">instFoldHashMapProd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{κ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{τ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanColls/Classes/Ops.html#LeanColls.Fold\">LeanColls.Fold</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">LeanColls.HashMap</a> <span class=\"fn\">κ</span> <span class=\"fn\">τ</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">κ</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">τ</span></span>)</span></span></div></div>"}]}